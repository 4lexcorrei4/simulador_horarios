{"version":3,"sources":["redux/api/urls.js","redux/api/api.js","redux/duck/redux.duck.js","redux/rootReducer.js","redux/store.js","component/topMenu/index.js","conf/index.js","container/topMenu.js","component/loader/index.js","component/timetable/index.js","container/content.js","container/page.js","App.js","reportWebVitals.js","index.js"],"names":["urls","base","departments","departmentSubjects","depId","subject","subjectShifts","instance","getDepartmentSubjects","department","axios","get","getSubject","getSubjectShifts","saga","types","initialState","year","all","chosen","undefined","shifts","loading","reducer","persistReducer","storage","key","state","action","type","newState","payload","newChosen","id","newShifts","actions","years","subjects","subjectInfo","takeLatest","Date","getMonth","getFullYear","push","put","data","api","classes","select","redux","Object","keys","index","Array","isArray","instances","time","found","length","infoSubject","credits","url","shiftsInformation","t","to","tp","tpo","p","po","abbreviation","building","map","shift","infoShift","teachers","duration","room","type_display","indexOf","name","title","toLowerCase","number","added","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","process","enhancers","reduxBatch","persistor","persistStore","run","TopMenu","logo","dispatch","useDispatch","changeYear","chosenSubjects","values","sort","a","b","src","value","onChange","event","target","disabled","selected","chooseDepartment","option","chooseSubject","obj","onClick","removeSubject","conf","TopMenuContainer","useSelector","Loader","className","Timetable","hours","current","filled","hour1","hour2","maxClasses","shiftInfo","start","weekday","hour","Math","max","colSpan","toString","parseInt","day","rowSpan","ContentContainer","PageContainer","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8b3778d.chunk.js","sourcesContent":["const urls = {\n    base: () => \"https://api.horarios.bitsys.tech/get?url=\",\n    departments: () => urls.base() + \"/departments\",\n    departmentSubjects: (depId) => urls.base() + \"/department/\" + depId,\n    subject: (subject) => urls.base() + \"/class/\" + subject,\n    subjectShifts: (instance) => urls.base() + \"/class/i/\" + instance + \"/shifts\"\n};\n\nexport default urls;","import axios from \"axios\";\nimport urls from \"./urls\";\n\nexport function getDepartments() {\n    return axios.get(urls.departments());\n}\n\nexport function getDepartmentSubjects(department) {\n    return axios.get(urls.departmentSubjects(department));\n}\n\nexport function getSubject(subject) {\n    return axios.get(urls.subject(subject));\n}\n\nexport function getSubjectShifts(instance) {\n    return axios.get(urls.subjectShifts(instance));\n}","import {put, takeLatest, select, all} from \"redux-saga/effects\";\nimport {persistReducer} from \"redux-persist\";\nimport {useHistory} from \"react-router-dom\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as api from \"../api/api\";\n//import Swal from \"sweetalert2\";\n//import withReactContent from \"sweetalert2-react-content\";\n\n//const swal = withReactContent(Swal);\n\nexport const types = {\n    Init: \"[Redux] Init\",\n    SetYears: \"[Redux] SetYears\",\n    ChangeYear: \"[Redux] ChangeYear\",\n    GetDepartments: \"[Redux] GetDepartments\",\n    SetDepartments: \"[Redux] SetDepartments\",\n    SetDepartment: \"[Redux] SetDepartment\",\n    GetDepartmentSubjects: \"[Redux] GetDepartmentSubjects\",\n    SetSubjects: \"[Redux] SetSubjects\",\n    AddOrUpdateSubjects: \"[Redux] AddOrUpdateSubjects\",\n    AddSubjectDone: \"[Redux] AddSubjectDone\",\n    RemoveSubject: \"[Redux] RemoveSubject\",\n    AddOrUpdateShifts: \"[Redux] AddOrUpdateShifts\",\n    Nothing: \"[Redux] Nothing\",\n};\n\nconst initialState = {\n    year: {\n        all: [],\n        chosen: undefined\n    },\n    department: {\n        all: [],\n        chosen: undefined\n    },\n    subject: {\n        all: [],\n        chosen: {}\n    },\n    shifts: {},\n    loading: true\n};\n\nexport const reducer = persistReducer(\n    {storage, key: \"simulador-horarios\"},\n    (state = initialState, action) => {\n        switch (action.type) {\n            case types.SetYears: {\n                const newState = {...state};\n                newState.year = action.payload;\n                return newState;\n            }\n            case types.ChangeYear: {\n                const newState = {...state};\n                newState.year.chosen = action.payload;\n                return newState;\n            }\n            case types.GetDepartments: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetDepartments: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.SetDepartment: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    chosen: action.payload\n                };\n                return newState;\n            }\n            case types.GetDepartmentSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetSubjects: {\n                const newState = {...state};\n                newState.subject = {\n                    ...state.subject,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.AddOrUpdateSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.AddSubjectDone: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                newChosen[action.payload.id] = action.payload;\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                return newState;\n            }\n            case types.RemoveSubject: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                delete newChosen[action.payload];\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                let newShifts = {...state.shifts};\n                delete newShifts[action.payload];\n                newState.shifts = {...newShifts};\n                return newState;\n            }\n            case types.AddOrUpdateShifts: {\n                const newState = {...state};\n                newState.shifts = {...state.shifts};\n                newState.shifts[action.payload.subject] = action.payload.shifts;\n                return newState;\n            }\n            default:\n                const newState = {...state};\n                newState.loading = false;\n                return newState;\n        }\n    }\n);\n\nexport const actions = {\n    init: () => ({ type: types.Init }),\n    setYears: (years) => ({ type: types.SetYears, payload: years }),\n    changeYear: (year) => ({ type: types.ChangeYear, payload: year }),\n    getDepartments: () => ({ type: types.GetDepartments }),\n    setDepartments: (departments) => ({ type: types.SetDepartments, payload: departments }),\n    setDepartment: (department) => ({ type: types.SetDepartment, payload: department }),\n    getDepartmentSubjects: (department) => ({ type: types.GetDepartmentSubjects, payload: department }),\n    setSubjects: (subjects) => ({ type: types.SetSubjects, payload: subjects }),\n    addOrUpdateSubjects: (subjects) => ({ type: types.AddOrUpdateSubjects, payload: subjects }),\n    addSubjectDone: (subjectInfo) => ({ type: types.AddSubjectDone, payload: subjectInfo }),\n    removeSubject: (subject) => ({ type: types.RemoveSubject, payload: subject }),\n    addOrUpdateShifts: (subject, shifts) => ({ type: types.AddOrUpdateShifts, payload: {subject, shifts} }),\n    nothing: () => ({ type: types.Nothing })\n};\n\nexport function* saga() {\n    yield takeLatest(types.Init, function* () {\n        const years = {\n            all: [],\n            chosen: new Date().getMonth() >= 9 ? new Date().getFullYear() + 1 : new Date().getFullYear()\n        }\n        for (let year = years.chosen; year >= 2015; year--)\n            years.all.push(year);\n        yield put(actions.setYears(years));\n        yield put(actions.getDepartments());\n    });\n    yield takeLatest(types.GetDepartments, function* () {\n        const {data} = yield api.getDepartments();\n        yield put(actions.setDepartments(data));\n    });\n    yield takeLatest(types.SetDepartment, function* ({payload: department}) {\n        const {data} = yield api.getDepartmentSubjects(department);\n        yield put(actions.setSubjects(data.classes));\n    });\n    yield takeLatest(types.ChangeYear, function* ({payload: year}) {\n        const subjects = yield select(state => state.redux.subject.chosen);\n        yield put(actions.addOrUpdateSubjects(Object.keys(subjects)));\n    });\n    yield takeLatest(types.AddOrUpdateSubjects, function* ({payload: subjects}) {\n        let index = 0;\n        let added = 0;\n        do {\n            let subject = Array.isArray(subjects) ? subjects[index++] : subjects;\n            if (subject > 0) {\n                const {data} = yield api.getSubject(subject);\n                let subjectInfo = data;\n                let instances = data.instances;\n                const year = yield select(state => state.redux.time.chosen);\n                let found = false;\n                let instance = undefined;\n                for (let index = 0; !found && index < instances.length; index++) {\n                    if (instances[index].year == year) {\n                        instance = instances[index].id;\n                        found = true;\n                    }\n                }\n                if (instance) {\n                    yield put(actions.addSubjectDone(subjectInfo));\n                    let infoSubject = {...subjectInfo};\n                    infoSubject.credits = infoSubject.credits / 2;\n                    delete infoSubject.instances;\n                    delete infoSubject.url;\n                    const {data} = yield api.getSubjectShifts(instance);\n                    const shiftsInformation = data;\n                    const shifts = {\n                        t: {},\n                        to: {},\n                        tp: {},\n                        tpo: {},\n                        p: {},\n                        po: {}\n                    };\n                    const {data: {building: {abbreviation}}} = yield api.getDepartmentSubjects(infoSubject.department.id);\n                    shiftsInformation.map(shift => {\n                        let infoShift = {...shift};\n                        delete infoShift.teachers;\n                        delete infoShift.url;\n                        for (let index = 0; index < infoShift.instances.length; index++) {\n                            infoShift.instances[index].duration = infoShift.instances[index].duration / 30;\n                            infoShift.instances[index].room = infoShift.instances[index].room ? abbreviation + \" \" + infoShift.instances[index].room : undefined;\n                        }\n                        let type = shift.type_display.indexOf(\"Teórico-Prático\") >= 0\n                            ? \"TP\"\n                            : shift.type_display.indexOf(\"Teórico\") >= 0\n                                ? \"T\"\n                                : \"P\";\n                        if (shift.type_display.indexOf(\"Online\") >= 0)\n                            type += \"O\";\n                        infoShift.type = {\n                            name: type,\n                            title: shift.type_display\n                        };\n                        delete infoShift.type_display;\n                        shifts[type.toLowerCase()][shift.number] = {\n                            subject: infoSubject,\n                            shift: infoShift\n                        };\n                    });\n                    yield put(actions.addOrUpdateShifts(subject, shifts));\n                    added++;\n                } else {\n                    yield put(actions.removeSubject(subject));\n                }\n            }\n        } while (Array.isArray(subjects) && index <= subjects.length);\n        yield put(actions.nothing());\n    });\n}\n","import {all} from \"redux-saga/effects\";\nimport {combineReducers} from \"redux\";\n\nimport * as redux from \"./duck/redux.duck\";\n\nexport const rootReducer = combineReducers({\n    redux: redux.reducer\n});\n\nexport function* rootSaga() {\n    yield all([redux.saga()]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {reduxBatch} from \"@manaflair/redux-batch\";\nimport {persistStore} from \"redux-persist\";\nimport {rootReducer, rootSaga} from \"./rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n    ...getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n        thunk: true\n    }),\n    sagaMiddleware\n];\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers: [reduxBatch]\n});\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport \"./index.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../../redux/duck/redux.duck\";\n\nconst TopMenu = ({name, logo, years, year, departments, department, subjects, subject}) => {\n    const dispatch = useDispatch();\n\n    const changeYear = (year) => {\n        dispatch(actions.changeYear(year));\n    };\n\n    const chooseDepartment = (department) => {\n        dispatch(actions.setDepartment(department));\n    };\n\n    const chooseSubject = (subject) => {\n        dispatch(actions.addOrUpdateSubjects(subject));\n    };\n\n    const removeSubject = (subject) => {\n        dispatch(actions.removeSubject(subject));\n    };\n\n    const chosenSubjects = Object.values(subject).sort((a, b) => {return a.abbreviation > b.abbreviation});\n\n    return <>\n        <div id=\"topMenu\">\n            <span>\n                <img src={logo} />\n                <h1>{name}</h1>\n            </span>\n            <span>\n                <select\n                    value={year}\n                    onChange={(event) => changeYear(event.target.value)}\n                >\n                    <option disabled selected>Escolher Ano Letivo</option>\n                    {\n                        years.map(year =>\n                            <option value={year}>{year}</option>\n                        )\n                    }\n                </select>\n                <select\n                    value={department}\n                    onChange={(event) => chooseDepartment(event.target.value)}\n                >\n                    <option disabled selected>Escolher Departamento</option>\n                    {\n                        departments.map(option =>\n                            <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n                <select\n                    onChange={(event) => chooseSubject(event.target.value)}\n                >\n                    <option value={-1} selected>Adicionar Cadeira</option>\n                    {\n                        subjects.map(option =>\n                            subject[option.id]\n                                ? <></>\n                                : <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n            </span>\n        </div>\n        <div id=\"subTopMenu\">\n            <div id=\"subjects\">\n                {\n                    chosenSubjects.map(obj =>\n                        <div title={obj.name}>\n                            {obj.abbreviation}\n                            <span onClick={() => removeSubject(obj.id)}>X</span>\n                        </div>\n                    )\n                }\n            </div>\n            <div id=\"update\" onClick={() => changeYear(year)}>&#8634; Atualizar</div>\n        </div>\n    </>\n};\n\nexport default TopMenu;","const conf = {\n    name: \"Simulador de Horários\",\n    logo: \"./logo.png\"\n};\n\nexport default conf;","import React from \"react\";\nimport TopMenu from \"../component/topMenu\";\nimport conf from \"../conf\";\nimport {useSelector} from \"react-redux\";\n\nconst TopMenuContainer = () => {\n    const years = useSelector(state => state.redux.year.all);\n    const year = useSelector(state => state.redux.year.chosen);\n    const departments = useSelector(state => state.redux.department.all);\n    const department = useSelector(state => state.redux.department.chosen);\n    const subjects = useSelector(state => state.redux.subject.all);\n    const subject = useSelector(state => state.redux.subject.chosen);\n\n    return <TopMenu\n        name={conf.name}\n        logo={conf.logo}\n        years={years}\n        year={year}\n        departments={departments}\n        department={department}\n        subjects={subjects}\n        subject={subject}\n    />\n};\n\nexport default TopMenuContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst Loader = () => {\n    return <div className=\"loaderContainer\">\n        <div className=\"loader\"></div>\n    </div>\n};\n\nexport default Loader;","import React from \"react\";\nimport \"./index.css\";\nimport {useSelector} from \"react-redux\";\nimport Loader from \"../loader\";\n\nconst Timetable = ({shifts}) => {\n    const hours = [];\n    for (let current = 8; current <= 23.5; current = current + 0.5)\n        hours.push(current * 60);\n\n    const classes = [];\n    const filled = [];\n    hours.map(() => {\n        let hour1 = [];\n        let hour2 = [];\n        [1, 2, 3, 4, 5].map(() => {\n            hour1.push([]);\n            hour2.push(0);\n        })\n        classes.push(hour1);\n        filled.push(hour2);\n    });\n\n    const maxClasses = [1, 1, 1, 1, 1];\n\n    Object.keys(shifts).map(subject => {\n        Object.keys(shifts[subject]).map(type => {\n            Object.keys(shifts[subject][type]).map(number => {\n                    let shiftInfo = shifts[subject][type][number];\n                    shiftInfo.shift.instances.map(instance => {\n                        classes[hours.indexOf(instance.start)][instance.weekday].push({\n                            subject: shiftInfo.subject,\n                            shift: {\n                                ...instance,\n                                number: shiftInfo.shift.number,\n                                type: shiftInfo.shift.type\n                            }\n                        });\n                        for (let hour = hours.indexOf(instance.start); hour < hours.indexOf(instance.start) + (instance.duration); hour++) {\n                            filled[hour][instance.weekday]++;\n                            maxClasses[instance.weekday] = Math.max(maxClasses[instance.weekday], filled[hour][instance.weekday]);\n                        }\n                    });\n                }\n            )\n        });\n    });\n\n    return <>\n        <table className=\"timetable\">\n            <thead>\n                <tr>\n                    <th>Hora</th>\n                    <th colSpan={maxClasses[0]}>2ª</th>\n                    <th colSpan={maxClasses[1]}>3ª</th>\n                    <th colSpan={maxClasses[2]}>4ª</th>\n                    <th colSpan={maxClasses[3]}>5ª</th>\n                    <th colSpan={maxClasses[4]}>6ª</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                hours.map(hour => <tr>\n                    <td>{\n                        (hour/60).toString().indexOf(\".5\") == -1\n                            ? parseInt(hour/60) < 10\n                                ? \"0\" + parseInt(hour/60)\n                                : parseInt(hour/60)\n                            : parseInt(hour/60)+1 < 10\n                                ? \"0\" + (parseInt(hour/60)+1)\n                                : (parseInt(hour/60)+1)\n\n                    }:00</td>\n                        {\n                            [0, 1, 2, 3, 4].map(day => <>\n                                {\n                                    filled[hours.indexOf(hour)][day]\n                                        ? classes[hours.indexOf(hour)][day].sort(\n                                            (a, b) => {\n                                                if (a.subject.abbreviation != b.subject.abbreviation)\n                                                    return a.subject.abbreviation > b.subject.abbreviation;\n                                                else\n                                                    return a.shift.number > b.shift.number;\n                                            }\n                                        ).map(shiftInfo =>\n                                            <td rowSpan={shiftInfo.shift.duration} className={`class ${shiftInfo.shift.type.name.toLowerCase()}`}>\n                                                <h3><span title={shiftInfo.subject.name}>{shiftInfo.subject.abbreviation}</span></h3>\n                                                <p><span title={shiftInfo.shift.type.title + \" \" + shiftInfo.shift.number}>{shiftInfo.shift.type.name} {shiftInfo.shift.number}</span><br />{shiftInfo.shift.room}</p>\n                                            </td>\n                                        )\n                                        : <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                }\n                                {\n                                    maxClasses[day] > filled[hours.indexOf(hour)][day] && filled[hours.indexOf(hour)][day]\n                                        ? <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                        : <></>\n                                }\n                                </>\n                            )\n                        }\n                    {/*\n                        [0, 1, 2, 3, 4].map(day => <>\n                            {\n                                classes[hours.indexOf(hour)][day].map(shift => <td>\n                                    {shift.id}\n                                </td>)\n                            }\n                        </>)\n                    */}\n                </tr>\n                )\n            }\n            </tbody>\n        </table>\n    </>\n};\n\nexport default Timetable;","import React from \"react\";\nimport Timetable from \"../component/timetable\";\nimport {useSelector} from \"react-redux\";\n\nconst ContentContainer = () => {\n    const shifts = useSelector(state => state.redux.shifts);\n\n    return <div id=\"content\">\n        <Timetable shifts={shifts} />\n    </div>\n};\n\nexport default ContentContainer;","import React, {useEffect} from \"react\";\nimport TopMenuContainer from \"./topMenu\";\nimport ContentContainer from \"./content\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../redux/duck/redux.duck\";\nimport Loader from \"../component/loader\";\n\nconst PageContainer = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.redux.loading);\n\n    useEffect(\n        () => {\n            dispatch(actions.init());\n        },\n        []\n    );\n\n    return <>\n        <TopMenuContainer />\n        <ContentContainer />\n        {\n            loading ? <Loader /> : <></>\n        }\n    </>\n};\n\nexport default PageContainer;","import React from 'react';\nimport axios from \"axios\";\nimport * as _redux from \"./redux\";\nimport store, {persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './App.css';\nimport PageContainer from \"./container/page\";\nimport \"./component/global.css\";\n\nfunction App() {\n    _redux.setupAxios(axios, store);\n\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <PageContainer />\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}