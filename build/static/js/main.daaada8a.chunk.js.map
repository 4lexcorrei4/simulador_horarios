{"version":3,"sources":["redux/api/urls.js","redux/api/api.js","redux/duck/redux.duck.js","redux/rootReducer.js","redux/store.js","component/topMenu/index.js","conf/index.js","container/topMenu.js","component/timetable/index.js","container/content.js","container/page.js","App.js","reportWebVitals.js","index.js"],"names":["urls","base","departments","departmentSubjects","depId","subject","subjectShifts","instance","getDepartmentSubjects","department","axios","get","getSubject","getSubjectShifts","saga","types","initialState","time","all","year","times","id","name","chosen","undefined","shifts","reducer","persistReducer","storage","key","state","action","type","newState","payload","newChosen","newShifts","actions","subjects","subjectInfo","takeLatest","put","data","api","classes","instances","select","redux","chosenComps","split","found","index","length","period","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","process","enhancers","reduxBatch","persistor","persistStore","run","TopMenu","logo","dispatch","useDispatch","chosenSubjects","Object","values","sort","a","b","abbreviation","src","value","onChange","event","chooseTime","target","disabled","selected","map","label","chooseDepartment","option","chooseSubject","obj","title","onClick","removeSubject","conf","TopMenuContainer","useSelector","Timetable","hours","current","push","filled","hour1","hour2","maxClasses","keys","shift","indexOf","start","weekday","short","number","type_display","class","duration","room","hour","Math","max","console","log","className","colSpan","parseInt","toString","day","rowSpan","ContentContainer","PageContainer","useEffect","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daaada8a.chunk.js","sourcesContent":["const urls = {\n    base: () => \"https://api.horarios.bitsys.tech/get?url=\",\n    departments: () => urls.base() + \"/departments\",\n    departmentSubjects: (depId) => urls.base() + \"/department/\" + depId,\n    subject: (subject) => urls.base() + \"/class/\" + subject,\n    subjectShifts: (instance) => urls.base() + \"/class/i/\" + instance + \"/shifts\"\n};\n\nexport default urls;","import axios from \"axios\";\nimport urls from \"./urls\";\n\nexport function getDepartments() {\n    return axios.get(urls.departments());\n}\n\nexport function getDepartmentSubjects(department) {\n    return axios.get(urls.departmentSubjects(department));\n}\n\nexport function getSubject(subject) {\n    return axios.get(urls.subject(subject));\n}\n\nexport function getSubjectShifts(instance) {\n    return axios.get(urls.subjectShifts(instance));\n}","import {put, takeLatest, select} from \"redux-saga/effects\";\nimport {persistReducer} from \"redux-persist\";\nimport {useHistory} from \"react-router-dom\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as api from \"../api/api\";\n//import Swal from \"sweetalert2\";\n//import withReactContent from \"sweetalert2-react-content\";\n\n//const swal = withReactContent(Swal);\n\nexport const types = {\n    Init: \"[Redux] Init\",\n    SetTime: \"[Redux] SetTime\",\n    GetDepartments: \"[Redux] GetDepartments\",\n    SetDepartments: \"[Redux] SetDepartments\",\n    SetDepartment: \"[Redux] SetDepartment\",\n    GetDepartmentSubjects: \"[Redux] GetDepartmentSubjects\",\n    SetSubjects: \"[Redux] SetSubjects\",\n    AddSubject: \"[Redux] AddSubject\",\n    AddSubjectDone: \"[Redux] AddSubjectDone\",\n    RemoveSubject: \"[Redux] RemoveSubject\",\n    AddShifts: \"[Redux] AddShifts\"\n};\n\nconst initialState = {\n    time: {\n        all: [\n            {\n                year: 2021,\n                times: [\n                    {\n                        id: 1,\n                        name: \"1º Semestre\"\n                    },\n                    {\n                        id: 2,\n                        name: \"Trimestre\"\n                    },\n                    {\n                        id: 3,\n                        name: \"2º Semestre\"\n                    }\n                ]\n            }\n        ],\n        chosen: \"2021-3\"\n    },\n    department: {\n        all: [],\n        chosen: undefined\n    },\n    subject: {\n        all: [],\n        chosen: {}\n    },\n    shifts: {}\n};\n\nexport const reducer = persistReducer(\n    {storage, key: \"simulador-horarios\"},\n    (state = initialState, action) => {\n        switch (action.type) {\n            case types.SetTime: {\n                const newState = {...state};\n                newState.time = {\n                    ...state.time,\n                    chosen: action.payload\n                };\n            }\n            case types.SetDepartments: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    all: action.payload\n                };\n                return newState;\n            }\n            case types.SetDepartment: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    chosen: action.payload\n                };\n                return newState;\n            }\n            case types.SetSubjects: {\n                const newState = {...state};\n                newState.subject = {\n                    ...state.subject,\n                    all: action.payload\n                };\n                return newState;\n            }\n            case types.AddSubjectDone: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                newChosen[action.payload.id] = action.payload;\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                return newState;\n            }\n            case types.RemoveSubject: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                delete newChosen[action.payload];\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                let newShifts = {...state.shifts};\n                delete newShifts[action.payload];\n                newState.shifts = {\n                    ...newShifts\n                };\n                return newState;\n            }\n            case types.AddShifts: {\n                const newState = {...state};\n                newState.shifts = {...state.shifts};\n                newState.shifts[action.payload.subject] = action.payload.shifts;\n                return newState;\n            }\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    init: () => ({ type: types.Init }),\n    setTime: (time) => ({ type: types.SetTime, payload: time }),\n    getDepartments: () => ({ type: types.GetDepartments }),\n    setDepartments: (departments) => ({ type: types.SetDepartments, payload: departments }),\n    setDepartment: (department) => ({ type: types.SetDepartment, payload: department }),\n    getDepartmentSubjects: (department) => ({ type: types.GetDepartmentSubjects, payload: department }),\n    setSubjects: (subjects) => ({ type: types.SetSubjects, payload: subjects }),\n    addSubject: (subject) => ({ type: types.AddSubject, payload: subject }),\n    addSubjectDone: (subjectInfo) => ({ type: types.AddSubjectDone, payload: subjectInfo }),\n    removeSubject: (subject) => ({ type: types.RemoveSubject, payload: subject }),\n    addShifts: (subject, shifts) => ({ type: types.AddShifts, payload: {subject, shifts} })\n};\n\nexport function* saga() {\n    yield takeLatest(types.Init, function* () {\n        yield put(actions.getDepartments());\n    });\n    yield takeLatest(types.GetDepartments, function* () {\n        const {data} = yield api.getDepartments();\n        yield put(actions.setDepartments(data));\n    });\n    yield takeLatest(types.SetDepartment, function* ({payload: department}) {\n        const {data} = yield api.getDepartmentSubjects(department);\n        yield put(actions.setSubjects(data.classes));\n    });\n    yield takeLatest(types.AddSubject, function* ({payload: subject}) {\n        if (subject > 0) {\n            const {data} = yield api.getSubject(subject);\n            let subjectInfo = data;\n            let instances = data.instances;\n            const {time: {chosen}} = yield select(state => state.redux);\n            let chosenComps = chosen.split(\"-\");\n            let year = chosenComps[0];\n            let time = chosenComps[1];\n            let found = false;\n            let instance = undefined;\n            for (let index = 0; !found && index < instances.length; index++) {\n                if (instances[index].year == year && instances[index].period == time) {\n                    instance = instances[index].id;\n                    found = true;\n                }\n            }\n            if (instance) {\n                yield put(actions.addSubjectDone(subjectInfo));\n                const {data} = yield api.getSubjectShifts(instance);\n                yield put(actions.addShifts(subject, data));\n            }\n        }\n    });\n}\n","import {all} from \"redux-saga/effects\";\nimport {combineReducers} from \"redux\";\n\nimport * as redux from \"./duck/redux.duck\";\n\nexport const rootReducer = combineReducers({\n    redux: redux.reducer\n});\n\nexport function* rootSaga() {\n    yield all([redux.saga()]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {reduxBatch} from \"@manaflair/redux-batch\";\nimport {persistStore} from \"redux-persist\";\nimport {rootReducer, rootSaga} from \"./rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n    ...getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n        thunk: true\n    }),\n    sagaMiddleware\n];\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers: [reduxBatch]\n});\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport \"./index.css\";\nimport {useDispatch} from \"react-redux\";\nimport {actions} from \"../../redux/duck/redux.duck\";\n\nconst TopMenu = ({name, logo, times, time, departments, department, subjects, subject}) => {\n    const dispatch = useDispatch();\n\n    const chooseTime = (time) => {\n        dispatch(actions.setTime(time));\n    };\n\n    const chooseDepartment = (department) => {\n        dispatch(actions.setDepartment(department));\n    };\n\n    const chooseSubject = (subject) => {\n        dispatch(actions.addSubject(subject));\n    };\n\n    const removeSubject = (subject) => {\n        dispatch(actions.removeSubject(subject));\n    };\n\n    const chosenSubjects = Object.values(subject).sort((a, b) => {return a.abbreviation > b.abbreviation});\n\n    return <>\n        <div id=\"topMenu\">\n            <span>\n                <img src={logo} />\n                <h1>{name}</h1>\n            </span>\n            <span>\n                <select\n                    value={time}\n                    onChange={(event) => chooseTime(event.target.value)}\n                >\n                    <option disabled selected>Escolher Período Letivo</option>\n                    {\n                        times.map(year =>\n                            <optgroup label={year.year}>\n                                {\n                                    year.times.map(time =>\n                                        <option value={year.year + \"-\" + time.id}>{time.name}</option>\n                                    )\n                                }\n                            </optgroup>\n                        )\n                    }\n                </select>\n                <select\n                    value={department}\n                    onChange={(event) => chooseDepartment(event.target.value)}\n                >\n                    <option disabled selected>Escolher Departamento</option>\n                    {\n                        departments.map(option =>\n                            <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n                <select\n                    onChange={(event) => chooseSubject(event.target.value)}\n                >\n                    <option value={-1} selected>Adicionar Cadeira</option>\n                    {\n                        subjects.map(option =>\n                            subject[option.id]\n                                ? <></>\n                                : <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n            </span>\n        </div>\n        <div id=\"subTopMenu\">\n            {\n                chosenSubjects.map(obj =>\n                    <div title={obj.name}>\n                        {obj.abbreviation}\n                        <span onClick={() => removeSubject(obj.id)}>X</span>\n                    </div>\n                )\n            }\n        </div>\n    </>\n};\n\nexport default TopMenu;","const conf = {\n    name: \"Simulador de Horários\",\n    logo: \"./logo.png\"\n};\n\nexport default conf;","import React from \"react\";\nimport TopMenu from \"../component/topMenu\";\nimport conf from \"../conf\";\nimport {useSelector} from \"react-redux\";\n\nconst TopMenuContainer = () => {\n    const times = useSelector(state => state.redux.time.all);\n    const time = useSelector(state => state.redux.time.chosen);\n    const departments = useSelector(state => state.redux.department.all);\n    const department = useSelector(state => state.redux.department.chosen);\n    const subjects = useSelector(state => state.redux.subject.all);\n    const subject = useSelector(state => state.redux.subject.chosen);\n\n    return <TopMenu\n        name={conf.name}\n        logo={conf.logo}\n        times={times}\n        time={time}\n        departments={departments}\n        department={department}\n        subjects={subjects}\n        subject={subject}\n    />\n};\n\nexport default TopMenuContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst Timetable = ({shifts, subjects}) => {\n    const hours = [];\n    for (let current = 8; current <= 23.5; current = current + 0.5)\n        hours.push(current * 60);\n\n    const classes = [];\n    const filled = [];\n    hours.map(() => {\n        let hour1 = [];\n        let hour2 = [];\n        [1, 2, 3, 4, 5].map(() => {\n            hour1.push([]);\n            hour2.push(0);\n        })\n        classes.push(hour1);\n        filled.push(hour2);\n    });\n\n    const maxClasses = [1, 1, 1, 1, 1];\n\n    Object.keys(shifts).map(subject => {\n        shifts[subject].map(shift => {\n            shift.instances.map(instance => {\n                classes[hours.indexOf(instance.start)][instance.weekday].push({\n                    id: shift.id,\n                    subject: {\n                        short: subjects[subject].abbreviation,\n                        name: subjects[subject].name\n                    },\n                    number: shift.number,\n                    type: {\n                        name: shift.type_display.indexOf(\"Teórico-Prático\") >= 0\n                            ? \"TP\"\n                            : shift.type_display.indexOf(\"Teórico\") >= 0\n                                ? \"T\"\n                                : \"P\",\n                        title: shift.type_display\n                    },\n                    class: shift.type_display.indexOf(\"Teórico-Prático\") >= 0\n                        ? \"tp\"\n                        : shift.type_display.indexOf(\"Teórico\") >= 0\n                            ? \"t\"\n                            : \"p\",\n                    duration: instance.duration / 30,\n                    room: instance.room ? instance.room : \"-\"\n                });\n                for (let hour = hours.indexOf(instance.start); hour < hours.indexOf(instance.start) + (instance.duration / 30); hour++)\n                    filled[hour][instance.weekday]++;\n                maxClasses[instance.weekday] = Math.max(maxClasses[instance.weekday], classes[hours.indexOf(instance.start)][instance.weekday].length);\n            });\n        });\n    });\n\n    console.log(classes)\n    console.log(maxClasses)\n\n    return <>\n        <table className=\"timetable\">\n            <thead>\n                <th>Hora</th>\n                <th colSpan={maxClasses[0]}>2ª</th>\n                <th colSpan={maxClasses[1]}>3ª</th>\n                <th colSpan={maxClasses[2]}>4ª</th>\n                <th colSpan={maxClasses[3]}>5ª</th>\n                <th colSpan={maxClasses[4]}>6ª</th>\n            </thead>\n            <tbody>\n            {\n                hours.map(hour => <tr>\n                    <td>{parseInt(hour/60) < 10 ? \"0\" + parseInt(hour/60) : parseInt(hour/60)}:{(hour/60).toString().indexOf(\".5\") > 0 ? \"30\" : \"00\"}</td>\n                        {\n                            [0, 1, 2, 3, 4].map(day => <>\n                                {\n                                    filled[hours.indexOf(hour)][day]\n                                        ? classes[hours.indexOf(hour)][day].sort(\n                                            (a, b) => {\n                                                if (a.subject.short != b.subject.short)\n                                                    return a.subject.short > b.subject.short;\n                                                else\n                                                    return a.number > b.number;\n                                            }\n                                        ).map(shift =>\n                                            <td rowSpan={shift.duration} className={`class ${shift.class}`}>\n                                                <h3 title={shift.subject.name}>{shift.subject.short}</h3>\n                                                <p><span title={shift.type.title + \" \" + shift.number}>{shift.type.name} {shift.number}</span><br />{shift.room}</p>\n                                            </td>\n                                        )\n                                        : <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                }\n                                {\n                                    maxClasses[day] > filled[hours.indexOf(hour)][day] && filled[hours.indexOf(hour)][day]\n                                        ? <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                        : <></>\n                                }\n                                </>\n                            )\n                        }\n                    {/*\n                        [0, 1, 2, 3, 4].map(day => <>\n                            {\n                                classes[hours.indexOf(hour)][day].map(shift => <td>\n                                    {shift.id}\n                                </td>)\n                            }\n                        </>)\n                    */}\n                </tr>\n                )\n            }\n            </tbody>\n        </table>\n    </>\n};\n\nexport default Timetable;","import React from \"react\";\nimport Timetable from \"../component/timetable\";\nimport {useSelector} from \"react-redux\";\n\nconst ContentContainer = () => {\n    const shifts = useSelector(state => state.redux.shifts);\n    const subjects = useSelector(state => state.redux.subject.chosen);\n\n    return <div>\n        <Timetable shifts={shifts} subjects={subjects} />\n    </div>\n};\n\nexport default ContentContainer;","import React, {useEffect} from \"react\";\nimport TopMenuContainer from \"./topMenu\";\nimport ContentContainer from \"./content\";\nimport {useDispatch} from \"react-redux\";\nimport {actions} from \"../redux/duck/redux.duck\";\n\nconst PageContainer = () => {\n    const dispatch = useDispatch();\n\n    useEffect(\n        () => {\n            dispatch(actions.init());\n        },\n        []\n    );\n\n    return <>\n        <TopMenuContainer />\n        <ContentContainer />\n    </>\n};\n\nexport default PageContainer;","import React from 'react';\nimport axios from \"axios\";\nimport * as _redux from \"./redux\";\nimport store, {persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './App.css';\nimport PageContainer from \"./container/page\";\nimport \"./component/global.css\";\n\nfunction App() {\n    _redux.setupAxios(axios, store);\n\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <PageContainer />\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}