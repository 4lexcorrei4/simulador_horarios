{"version":3,"sources":["redux/api/urls.js","redux/api/api.js","redux/duck/redux.duck.js","redux/rootReducer.js","redux/store.js","component/topMenu/index.js","conf/index.js","container/topMenu.js","component/timetable/index.js","container/content.js","component/loader/index.js","container/page.js","App.js","reportWebVitals.js","index.js"],"names":["urls","base","departments","departmentSubjects","depId","subject","subjectShifts","instance","getDepartmentSubjects","department","axios","get","getSubject","getSubjectShifts","saga","types","initialState","view","undefined","year","all","chosen","shifts","classes","loading","reducer","persistReducer","storage","key","state","action","type","newState","payload","newChosen","id","newShifts","newClasses","push","splice","indexOf","actions","years","subjects","subjectInfo","takeLatest","Date","getMonth","getFullYear","put","data","api","select","redux","Object","keys","index","Array","isArray","instances","found","length","infoSubject","credits","url","shiftsInformation","t","to","tp","tpo","p","po","abbreviation","building","map","shift","infoShift","teachers","duration","room","type_display","name","title","toLowerCase","number","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","process","enhancers","reduxBatch","persistor","persistStore","run","TopMenu","logo","dispatch","useDispatch","useSelector","changeYear","setView","chosenSubjects","values","sort","a","b","src","value","onChange","event","target","disabled","selected","chooseDepartment","option","chooseSubject","obj","onClick","removeSubject","className","conf","TopMenuContainer","Timetable","maxClasses","hours","filled","showSave","chosenClasses","saveOrRemoveClass","colSpan","hour","toString","parseInt","day","shiftInfo","rowSpan","onMouseOver","$","addClass","onMouseLeave","removeClass","ContentContainer","current","hour1","hour2","showShifts","info","split","start","weekday","Math","max","Loader","PageContainer","useEffect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c77f1d7.chunk.js","sourcesContent":["const urls = {\n    base: () => \"https://api.horarios.bitsys.tech/get?url=\",\n    departments: () => urls.base() + \"/departments\",\n    departmentSubjects: (depId) => urls.base() + \"/department/\" + depId,\n    subject: (subject) => urls.base() + \"/class/\" + subject,\n    subjectShifts: (instance) => urls.base() + \"/class/i/\" + instance + \"/shifts\"\n};\n\nexport default urls;","import axios from \"axios\";\nimport urls from \"./urls\";\n\nexport function getDepartments() {\n    return axios.get(urls.departments());\n}\n\nexport function getDepartmentSubjects(department) {\n    return axios.get(urls.departmentSubjects(department));\n}\n\nexport function getSubject(subject) {\n    return axios.get(urls.subject(subject));\n}\n\nexport function getSubjectShifts(instance) {\n    return axios.get(urls.subjectShifts(instance));\n}","import {put, takeLatest, select, all} from \"redux-saga/effects\";\nimport {persistReducer} from \"redux-persist\";\nimport {useHistory} from \"react-router-dom\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as api from \"../api/api\";\n//import Swal from \"sweetalert2\";\n//import withReactContent from \"sweetalert2-react-content\";\n\n//const swal = withReactContent(Swal);\n\nexport const types = {\n    Init: \"[Redux] Init\",\n    SetYears: \"[Redux] SetYears\",\n    ChangeYear: \"[Redux] ChangeYear\",\n    GetDepartments: \"[Redux] GetDepartments\",\n    SetDepartments: \"[Redux] SetDepartments\",\n    SetDepartment: \"[Redux] SetDepartment\",\n    GetDepartmentSubjects: \"[Redux] GetDepartmentSubjects\",\n    SetSubjects: \"[Redux] SetSubjects\",\n    AddOrUpdateSubjects: \"[Redux] AddOrUpdateSubjects\",\n    AddSubjectDone: \"[Redux] AddSubjectDone\",\n    RemoveSubject: \"[Redux] RemoveSubject\",\n    AddOrUpdateShifts: \"[Redux] AddOrUpdateShifts\",\n    SaveClass: \"[Redux] SaveClass\",\n    RemoveClass: \"[Redux] RemoveClass\",\n    SetView: \"[Redux] SetView\",\n    Nothing: \"[Redux] Nothing\",\n};\n\nconst initialState = {\n    view: undefined,\n    year: {\n        all: [],\n        chosen: undefined\n    },\n    department: {\n        all: [],\n        chosen: undefined\n    },\n    subject: {\n        all: [],\n        chosen: {}\n    },\n    shifts: {},\n    classes: [],\n    loading: true\n};\n\nexport const reducer = persistReducer(\n    {storage, key: \"simulador-horarios\"},\n    (state = initialState, action) => {\n        switch (action.type) {\n            case types.SetYears: {\n                const newState = {...state};\n                newState.year = action.payload;\n                return newState;\n            }\n            case types.ChangeYear: {\n                const newState = {...state};\n                newState.year.chosen = action.payload;\n                return newState;\n            }\n            case types.GetDepartments: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetDepartments: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.SetDepartment: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    chosen: action.payload\n                };\n                return newState;\n            }\n            case types.GetDepartmentSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetSubjects: {\n                const newState = {...state};\n                newState.subject = {\n                    ...state.subject,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.AddOrUpdateSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.AddSubjectDone: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                newChosen[action.payload.id] = action.payload;\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                return newState;\n            }\n            case types.RemoveSubject: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                delete newChosen[action.payload];\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                let newShifts = {...state.shifts};\n                delete newShifts[action.payload];\n                newState.shifts = {...newShifts};\n                return newState;\n            }\n            case types.AddOrUpdateShifts: {\n                const newState = {...state};\n                newState.shifts = {...state.shifts};\n                newState.shifts[action.payload.subject] = action.payload.shifts;\n                return newState;\n            }\n            case types.SaveClass: {\n                const newState = {...state};\n                const newClasses = [...state.classes];\n                newClasses.push(action.payload);\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.RemoveClass: {\n                const newState = {...state};\n                const newClasses = [...state.classes];\n                newClasses.splice(state.classes.indexOf(action.payload), 1);\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.SetView: {\n                const newState = {...state};\n                newState.view = action.payload;\n                return newState;\n            }\n            default:\n                const newState = {...state};\n                newState.loading = false;\n                return newState;\n        }\n    }\n);\n\nexport const actions = {\n    init: () => ({ type: types.Init }),\n    setYears: (years) => ({ type: types.SetYears, payload: years }),\n    changeYear: (year) => ({ type: types.ChangeYear, payload: year }),\n    getDepartments: () => ({ type: types.GetDepartments }),\n    setDepartments: (departments) => ({ type: types.SetDepartments, payload: departments }),\n    setDepartment: (department) => ({ type: types.SetDepartment, payload: department }),\n    getDepartmentSubjects: (department) => ({ type: types.GetDepartmentSubjects, payload: department }),\n    setSubjects: (subjects) => ({ type: types.SetSubjects, payload: subjects }),\n    addOrUpdateSubjects: (subjects) => ({ type: types.AddOrUpdateSubjects, payload: subjects }),\n    addSubjectDone: (subjectInfo) => ({ type: types.AddSubjectDone, payload: subjectInfo }),\n    removeSubject: (subject) => ({ type: types.RemoveSubject, payload: subject }),\n    addOrUpdateShifts: (subject, shifts) => ({ type: types.AddOrUpdateShifts, payload: {subject, shifts} }),\n    addClass: (id) => ({ type: types.SaveClass, payload: id }),\n    removeClass: (id) => ({ type: types.RemoveClass, payload: id }),\n    setView: (view) => ({ type: types.SetView, payload: view }),\n    nothing: () => ({ type: types.Nothing })\n};\n\nexport function* saga() {\n    yield takeLatest(types.Init, function* () {\n        const years = {\n            all: [],\n            chosen: new Date().getMonth() >= 9 ? new Date().getFullYear() + 1 : new Date().getFullYear()\n        }\n        for (let year = years.chosen; year >= 2015; year--)\n            years.all.push(year);\n        yield put(actions.setYears(years));\n        yield put(actions.getDepartments());\n    });\n    yield takeLatest(types.GetDepartments, function* () {\n        const {data} = yield api.getDepartments();\n        yield put(actions.setDepartments(data));\n    });\n    yield takeLatest(types.SetDepartment, function* ({payload: department}) {\n        const {data} = yield api.getDepartmentSubjects(department);\n        yield put(actions.setSubjects(data.classes));\n    });\n    yield takeLatest(types.ChangeYear, function* ({payload: year}) {\n        const subjects = yield select(state => state.redux.subject.chosen);\n        yield put(actions.addOrUpdateSubjects(Object.keys(subjects)));\n    });\n    yield takeLatest(types.AddOrUpdateSubjects, function* ({payload: subjects}) {\n        let index = 0;\n        do {\n            let subject = Array.isArray(subjects) ? subjects[index++] : subjects;\n            if (subject > 0) {\n                const {data} = yield api.getSubject(subject);\n                let subjectInfo = data;\n                let instances = data.instances;\n                const year = yield select(state => state.redux.year.chosen);\n                let found = false;\n                let instance = undefined;\n                for (let index = 0; !found && index < instances.length; index++) {\n                    if (instances[index].year == year) {\n                        instance = instances[index].id;\n                        found = true;\n                    }\n                }\n                if (instance) {\n                    yield put(actions.addSubjectDone(subjectInfo));\n                    let infoSubject = {...subjectInfo};\n                    infoSubject.credits = infoSubject.credits / 2;\n                    delete infoSubject.instances;\n                    delete infoSubject.url;\n                    const {data} = yield api.getSubjectShifts(instance);\n                    const shiftsInformation = data;\n                    const shifts = {\n                        t: {},\n                        to: {},\n                        tp: {},\n                        tpo: {},\n                        p: {},\n                        po: {}\n                    };\n                    const {data: {building: {abbreviation}}} = yield api.getDepartmentSubjects(infoSubject.department.id);\n                    shiftsInformation.map(shift => {\n                        let infoShift = {...shift};\n                        delete infoShift.teachers;\n                        delete infoShift.url;\n                        for (let index = 0; index < infoShift.instances.length; index++) {\n                            infoShift.instances[index].duration = infoShift.instances[index].duration / 30;\n                            infoShift.instances[index].room = infoShift.instances[index].room ? abbreviation + \" \" + infoShift.instances[index].room : undefined;\n                        }\n                        let type = shift.type_display.indexOf(\"Teórico-Prático\") >= 0\n                            ? \"TP\"\n                            : shift.type_display.indexOf(\"Teórico\") >= 0\n                                ? \"T\"\n                                : \"P\";\n                        if (shift.type_display.indexOf(\"Online\") >= 0)\n                            type += \"O\";\n                        infoShift.type = {\n                            name: type,\n                            title: shift.type_display\n                        };\n                        delete infoShift.type_display;\n                        shifts[type.toLowerCase()][shift.number] = {\n                            subject: infoSubject,\n                            shift: infoShift\n                        };\n                    });\n                    yield put(actions.addOrUpdateShifts(subject, shifts));\n                } else {\n                    yield put(actions.removeSubject(subject));\n                }\n            }\n        } while (Array.isArray(subjects) && index <= subjects.length);\n        yield put(actions.nothing());\n    });\n}\n","import {all} from \"redux-saga/effects\";\nimport {combineReducers} from \"redux\";\n\nimport * as redux from \"./duck/redux.duck\";\n\nexport const rootReducer = combineReducers({\n    redux: redux.reducer\n});\n\nexport function* rootSaga() {\n    yield all([redux.saga()]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {reduxBatch} from \"@manaflair/redux-batch\";\nimport {persistStore} from \"redux-persist\";\nimport {rootReducer, rootSaga} from \"./rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n    ...getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n        thunk: true\n    }),\n    sagaMiddleware\n];\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers: [reduxBatch]\n});\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport \"./index.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../../redux/duck/redux.duck\";\n\nconst TopMenu = ({name, logo, years, year, departments, department, subjects, subject}) => {\n    const dispatch = useDispatch();\n\n    const view = useSelector(state => state.redux.view);\n\n    const changeYear = (year) => {\n        dispatch(actions.changeYear(year));\n    };\n\n    const chooseDepartment = (department) => {\n        dispatch(actions.setDepartment(department));\n    };\n\n    const chooseSubject = (subject) => {\n        dispatch(actions.addOrUpdateSubjects(subject));\n    };\n\n    const removeSubject = (subject) => {\n        dispatch(actions.removeSubject(subject));\n    };\n\n    const setView = (view) => {\n        dispatch(actions.setView(view));\n    };\n\n    const chosenSubjects = Object.values(subject).sort((a, b) => {return a.abbreviation > b.abbreviation});\n\n    return <>\n        <div id=\"topMenu\">\n            <span>\n                <img src={logo} />\n                <h1>{name}</h1>\n            </span>\n            <span>\n                <select\n                    value={year}\n                    onChange={(event) => changeYear(event.target.value)}\n                >\n                    <option disabled selected>Escolher Ano Letivo</option>\n                    {\n                        years.map(year =>\n                            <option value={year}>{year}</option>\n                        )\n                    }\n                </select>\n                <select\n                    value={department}\n                    onChange={(event) => chooseDepartment(event.target.value)}\n                >\n                    <option disabled selected>Escolher Departamento</option>\n                    {\n                        departments.map(option =>\n                            <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n                <select\n                    onChange={(event) => chooseSubject(event.target.value)}\n                >\n                    <option value={-1} selected>Adicionar Cadeira</option>\n                    {\n                        subjects.map(option =>\n                            subject[option.id]\n                                ? <></>\n                                : <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n            </span>\n        </div>\n        <div id=\"subTopMenu\">\n            <div id=\"subjects\">\n                {\n                    chosenSubjects.map(obj =>\n                        <div title={obj.name}>\n                            {obj.abbreviation}\n                            <span onClick={() => removeSubject(obj.id)}>X</span>\n                        </div>\n                    )\n                }\n            </div>\n            <div id=\"menu\">\n                <div className=\"option\" id=\"update\" onClick={() => changeYear(year)}><span>&#8634; Atualizar</span></div>\n                <div id=\"view\">\n                    <span className={view == \"subjects\" ? \"active\" : \"\"} onClick={() => setView(\"subjects\")}>Turnos</span>\n                    <span className={view == undefined ? \"active\" : \"\"} onClick={() => setView(undefined)}>Escolher</span>\n                    <span className={view == \"classes\" ? \"active\" : \"\"} onClick={() => setView(\"classes\")}>Escolhido</span>\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default TopMenu;","const conf = {\n    name: \"Simulador de Horários\",\n    logo: \"./logo.png\"\n};\n\nexport default conf;","import React from \"react\";\nimport TopMenu from \"../component/topMenu\";\nimport conf from \"../conf\";\nimport {useSelector} from \"react-redux\";\n\nconst TopMenuContainer = () => {\n    const years = useSelector(state => state.redux.year.all);\n    const year = useSelector(state => state.redux.year.chosen);\n    const departments = useSelector(state => state.redux.department.all);\n    const department = useSelector(state => state.redux.department.chosen);\n    const subjects = useSelector(state => state.redux.subject.all);\n    const subject = useSelector(state => state.redux.subject.chosen);\n\n    return <TopMenu\n        name={conf.name}\n        logo={conf.logo}\n        years={years}\n        year={year}\n        departments={departments}\n        department={department}\n        subjects={subjects}\n        subject={subject}\n    />\n};\n\nexport default TopMenuContainer;","import React from \"react\";\nimport \"./index.css\";\nimport $ from \"jquery\";\nimport {actions} from \"../../redux/duck/redux.duck\";\nimport {useDispatch} from \"react-redux\";\n\nconst Timetable = ({maxClasses, hours, classes, filled, showSave, chosenClasses}) => {\n    const dispatch = useDispatch();\n\n    const onMouseOver = (id) => {\n        $(\".\" + id).addClass(\"hover\");\n    };\n\n    const onMouseLeave = (id) => {\n        $(\".\" + id).removeClass(\"hover\");\n    };\n\n    const saveOrRemoveClass = (id) => {\n        if (chosenClasses.indexOf(id) < 0)\n            dispatch(actions.addClass(id));\n        else\n            dispatch(actions.removeClass(id));\n    };\n\n    return <>\n        <table id=\"timetable\" className=\"timetable\">\n            <thead>\n                <tr>\n                    <th>Hora</th>\n                    <th colSpan={maxClasses[0]}>2ª</th>\n                    <th colSpan={maxClasses[1]}>3ª</th>\n                    <th colSpan={maxClasses[2]}>4ª</th>\n                    <th colSpan={maxClasses[3]}>5ª</th>\n                    <th colSpan={maxClasses[4]}>6ª</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                hours.map(hour => <tr>\n                    <td>{\n                        (hour/60).toString().indexOf(\".5\") == -1\n                            ? parseInt(hour/60) < 10\n                                ? \"0\" + parseInt(hour/60)\n                                : parseInt(hour/60)\n                            : parseInt(hour/60)+1 < 10\n                                ? \"0\" + (parseInt(hour/60)+1)\n                                : (parseInt(hour/60)+1)\n\n                    }:00</td>\n                        {\n                            [0, 1, 2, 3, 4].map(day => <>\n                                {\n                                    filled[hours.indexOf(hour)][day]\n                                        ? classes[hours.indexOf(hour)][day].sort(\n                                            (a, b) => {\n                                                if (a.subject.abbreviation != b.subject.abbreviation)\n                                                    return a.subject.abbreviation > b.subject.abbreviation;\n                                                else\n                                                    return a.shift.number > b.shift.number;\n                                            }\n                                        ).map(shiftInfo =>\n                                            <td\n                                                rowSpan={shiftInfo.shift.duration} className={`class ${shiftInfo.shift.type.name.toLowerCase()} ${shiftInfo.subject.id}-${shiftInfo.shift.type.name.toLowerCase()}-${shiftInfo.shift.number}`}\n                                                onMouseOver={() => onMouseOver(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name.toLowerCase() + \"-\" + shiftInfo.shift.number)}\n                                                onMouseLeave={() => onMouseLeave(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name.toLowerCase() + \"-\" + shiftInfo.shift.number)}\n                                            >\n                                                {\n                                                    showSave\n                                                        ? chosenClasses.indexOf(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name.toLowerCase() + \"-\" + shiftInfo.shift.number) < 0\n                                                            ? <div className=\"save\" title=\"Guardar\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name.toLowerCase() + \"-\" + shiftInfo.shift.number)}>&#9733;</div>\n                                                            : <div className=\"save\" title=\"Remover\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name.toLowerCase() + \"-\" + shiftInfo.shift.number)}>X</div>\n                                                        : <></>\n                                                }\n                                                <h3><span title={shiftInfo.subject.name}>{shiftInfo.subject.abbreviation}</span></h3>\n                                                <p><span title={shiftInfo.shift.type.title + \" \" + shiftInfo.shift.number}>{shiftInfo.shift.type.name} {shiftInfo.shift.number}</span><br />{shiftInfo.shift.room}</p>\n                                            </td>\n                                        )\n                                        : <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                }\n                                {\n                                    maxClasses[day] > filled[hours.indexOf(hour)][day] && filled[hours.indexOf(hour)][day]\n                                        ? <td colSpan={maxClasses[day] - filled[hours.indexOf(hour)][day]}></td>\n                                        : <></>\n                                }\n                                </>\n                            )\n                        }\n                </tr>\n                )\n            }\n            </tbody>\n        </table>\n    </>\n};\n\nexport default Timetable;","import React from \"react\";\nimport Timetable from \"../component/timetable\";\nimport {useSelector} from \"react-redux\";\n\nconst ContentContainer = () => {\n    const shifts = useSelector(state => state.redux.shifts);\n    const chosenClasses = useSelector(state => state.redux.classes);\n    const view = useSelector(state => state.redux.view);\n\n    const hours = [];\n    for (let current = 8; current <= 23.5; current = current + 0.5)\n        hours.push(current * 60);\n\n    const classes = [];\n    const filled = [];\n    hours.map(() => {\n        let hour1 = [];\n        let hour2 = [];\n        [1, 2, 3, 4, 5].map(() => {\n            hour1.push([]);\n            hour2.push(0);\n        })\n        classes.push(hour1);\n        filled.push(hour2);\n    });\n\n    const maxClasses = [1, 1, 1, 1, 1];\n\n    let showShifts = {};\n    if (view == \"classes\")\n        chosenClasses.map(obj => {\n            const info = obj.split(\"-\");\n            if (!showShifts[info[0]]) {showShifts[info[0]] = {}}\n            if (!showShifts[info[0]][info[1]]) {showShifts[info[0]][info[1]] = {}}\n            if (!showShifts[info[0]][info[1]][info[2]]) {showShifts[info[0]][info[1]][info[2]] = {}}\n            showShifts[info[0]][info[1]][info[2]] = shifts[info[0]][info[1]][info[2]];\n        });\n    else\n        showShifts = shifts;\n\n    Object.keys(showShifts).map(subject => {\n        Object.keys(showShifts[subject]).map(type => {\n            Object.keys(showShifts[subject][type]).map(number => {\n                    let shiftInfo = showShifts[subject][type][number];\n                    shiftInfo.shift.instances.map(instance => {\n                        classes[hours.indexOf(instance.start)][instance.weekday].push({\n                            subject: shiftInfo.subject,\n                            shift: {\n                                ...instance,\n                                number: shiftInfo.shift.number,\n                                type: shiftInfo.shift.type\n                            }\n                        });\n                        for (let hour = hours.indexOf(instance.start); hour < hours.indexOf(instance.start) + (instance.duration); hour++) {\n                            filled[hour][instance.weekday]++;\n                            maxClasses[instance.weekday] = Math.max(maxClasses[instance.weekday], filled[hour][instance.weekday]);\n                        }\n                    });\n                }\n            )\n        });\n    });\n\n    return <div id=\"content\">\n        <Timetable\n            maxClasses={maxClasses}\n            hours={hours}\n            classes={classes}\n            filled={filled}\n            showSave={view ? false : true}\n            chosenClasses={chosenClasses}\n        />\n    </div>\n};\n\nexport default ContentContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst Loader = () => {\n    return <div className=\"loaderContainer\">\n        <div className=\"loader\"></div>\n    </div>\n};\n\nexport default Loader;","import React, {useEffect} from \"react\";\nimport TopMenuContainer from \"./topMenu\";\nimport ContentContainer from \"./content\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../redux/duck/redux.duck\";\nimport Loader from \"../component/loader\";\n\nconst PageContainer = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.redux.loading);\n\n    useEffect(\n        () => {\n            dispatch(actions.init());\n        },\n        []\n    );\n\n    return <>\n        <TopMenuContainer />\n        <ContentContainer />\n        {\n            loading ? <Loader /> : <></>\n        }\n    </>\n};\n\nexport default PageContainer;","import React from 'react';\nimport axios from \"axios\";\nimport * as _redux from \"./redux\";\nimport store, {persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './App.css';\nimport PageContainer from \"./container/page\";\nimport \"./component/global.css\";\n\nfunction App() {\n    _redux.setupAxios(axios, store);\n\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <PageContainer />\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}