{"version":3,"sources":["redux/api/urls.js","redux/api/api.js","conf/index.js","redux/duck/redux.duck.js","redux/rootReducer.js","redux/store.js","component/topMenu/index.js","container/topMenu.js","component/elementTd/index.js","component/timetable/index.js","container/content.js","component/loader/index.js","component/footer/index.js","container/footer.js","container/page.js","component/about/index.js","App.js","reportWebVitals.js","index.js"],"names":["urls","base","departments","departmentSubjects","depId","subject","subjectShifts","instance","getDepartmentSubjects","department","axios","get","getSubject","getSubjectShifts","conf","name","logo","classesTypes","type","saga","types","initialState","view","undefined","year","all","chosen","shifts","classes","loading","reducer","persistReducer","storage","key","state","action","newState","payload","content","newChosen","id","newShifts","newClasses","count","number","actions","years","subjects","subjectInfo","takeLatest","Date","getMonth","getFullYear","push","put","select","redux","Array","isArray","data","api","Object","keys","index","instances","found","length","infoSubject","credits","url","shiftsInformation","t","to","tp","tpo","p","po","abbreviation","building","map","shift","infoShift","teachers","duration","room","title","type_display","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","process","enhancers","reduxBatch","persistor","persistStore","run","TopMenu","dispatch","useDispatch","useSelector","changeYear","setView","chosenSubjects","values","sort","a","b","src","value","onChange","event","target","disabled","selected","chooseDepartment","option","chooseSubject","obj","onClick","removeSubject","className","TopMenuContainer","ElementTD","times","elements","time","Timetable","maxClasses","hours","filled","chosenClasses","saveOrRemoveClass","colSpan","hour","toString","indexOf","parseInt","day","shiftInfo","rowSpan","onMouseOver","$","addClass","onMouseLeave","removeClass","toLowerCase","toUpperCase","ContentContainer","current","hour1","hour2","showShifts","start","weekday","Math","max","Loader","Footer","FooterContainer","PageContainer","ReactGA","initialize","pageview","window","location","pathname","search","useEffect","About","href","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c255924.chunk.js","sourcesContent":["const urls = {\n    base: () => \"https://api.horarios.bitsys.tech/get?url=\",\n    departments: () => urls.base() + \"/departments\",\n    departmentSubjects: (depId) => urls.base() + \"/department/\" + depId,\n    subject: (subject) => urls.base() + \"/class/\" + subject,\n    subjectShifts: (instance) => urls.base() + \"/class/i/\" + instance + \"/shifts\"\n};\n\nexport default urls;","import axios from \"axios\";\nimport urls from \"./urls\";\n\nexport function getDepartments() {\n    return axios.get(urls.departments());\n}\n\nexport function getDepartmentSubjects(department) {\n    return axios.get(urls.departmentSubjects(department));\n}\n\nexport function getSubject(subject) {\n    return axios.get(urls.subject(subject));\n}\n\nexport function getSubjectShifts(instance) {\n    return axios.get(urls.subjectShifts(instance));\n}","const conf = {\n    name: \"Simulador de Horários\",\n    logo: \"./logo.png\",\n    classesTypes: (type) => {\n        switch (type) {\n            case 1: return \"t\"; break;\n            case 2: return \"p\"; break;\n            case 3: return \"tp\"; break;\n            case 4: return \"s\"; break;\n            case 5: return \"ot\"; break;\n            case 6: return \"tc\"; break;\n            case 7: return \"to\"; break;\n            case 8: return \"po\"; break;\n            case 9: return \"tpo\"; break;\n        }\n    }\n};\n\nexport default conf;","import {put, takeLatest, select, all} from \"redux-saga/effects\";\nimport {persistReducer} from \"redux-persist\";\nimport {useHistory} from \"react-router-dom\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as api from \"../api/api\";\nimport conf from \"../../conf\";\n//import Swal from \"sweetalert2\";\n//import withReactContent from \"sweetalert2-react-content\";\n\n//const swal = withReactContent(Swal);\n\nexport const types = {\n    Init: \"[Redux] Init\",\n    Set: \"[Redux] Set\",\n    SetYears: \"[Redux] SetYears\",\n    ChangeYear: \"[Redux] ChangeYear\",\n    GetDepartments: \"[Redux] GetDepartments\",\n    SetDepartments: \"[Redux] SetDepartments\",\n    SetDepartment: \"[Redux] SetDepartment\",\n    GetDepartmentSubjects: \"[Redux] GetDepartmentSubjects\",\n    SetSubjects: \"[Redux] SetSubjects\",\n    AddOrUpdateSubjects: \"[Redux] AddOrUpdateSubjects\",\n    AddSubjectDone: \"[Redux] AddSubjectDone\",\n    RemoveSubject: \"[Redux] RemoveSubject\",\n    AddOrUpdateShifts: \"[Redux] AddOrUpdateShifts\",\n    SaveClass: \"[Redux] SaveClass\",\n    RemoveClass: \"[Redux] RemoveClass\",\n    SetView: \"[Redux] SetView\",\n    Nothing: \"[Redux] Nothing\",\n};\n\nconst initialState = {\n    view: undefined,\n    year: {\n        all: [],\n        chosen: undefined\n    },\n    department: {\n        all: [],\n        chosen: undefined\n    },\n    subject: {\n        all: [],\n        chosen: {}\n    },\n    shifts: {},\n    classes: {},\n    loading: true\n};\n\nexport const reducer = persistReducer(\n    {storage, key: \"simulador-horarios\"},\n    (state = initialState, action) => {\n        switch (action.type) {\n            case types.Set: {\n                const newState = {...state};\n                newState[action.payload.name] = action.payload.content;\n                return newState;\n            }\n            case types.SetYears: {\n                const newState = {...state};\n                newState.year = action.payload;\n                return newState;\n            }\n            case types.ChangeYear: {\n                const newState = {...state};\n                newState.year.chosen = action.payload;\n                return newState;\n            }\n            case types.GetDepartments: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetDepartments: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.SetDepartment: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    chosen: action.payload\n                };\n                return newState;\n            }\n            case types.GetDepartmentSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetSubjects: {\n                const newState = {...state};\n                newState.subject = {\n                    ...state.subject,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.AddOrUpdateSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.AddSubjectDone: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                newChosen[action.payload.id] = action.payload;\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                return newState;\n            }\n            case types.RemoveSubject: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                delete newChosen[action.payload];\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                let newShifts = {...state.shifts};\n                delete newShifts[action.payload];\n                newState.shifts = {...newShifts};\n                return newState;\n            }\n            case types.AddOrUpdateShifts: {\n                const newState = {...state};\n                newState.shifts = {...state.shifts};\n                newState.shifts[action.payload.subject] = action.payload.shifts;\n                return newState;\n            }\n            case types.SaveClass: {\n                const newState = {...state};\n                const newClasses = {...state.classes};\n                if (!newClasses[action.payload.subject]) {\n                    newClasses[action.payload.subject] = {};\n                    newClasses[action.payload.subject].count = 1;\n                } else {\n                    newClasses[action.payload.subject].count++;\n                }\n                if (!newClasses[action.payload.subject][action.payload.type])\n                    newClasses[action.payload.subject][action.payload.type] = {};\n                newClasses[action.payload.subject][action.payload.type][action.payload.number] = {...state.shifts[action.payload.subject][action.payload.type][action.payload.number]};\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.RemoveClass: {\n                const newState = {...state};\n                const newClasses = {...state.classes};\n                newClasses[action.payload.subject].count--;\n                delete newClasses[action.payload.subject][action.payload.type][action.payload.number];\n                if (newClasses[action.payload.subject].count == 0)\n                    delete newClasses[action.payload.subject];\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.SetView: {\n                const newState = {...state};\n                newState.view = action.payload;\n                return newState;\n            }\n            default:\n                const newState = {...state};\n                newState.loading = false;\n                return newState;\n        }\n    }\n);\n\nexport const actions = {\n    init: () => ({ type: types.Init }),\n    set: (name, content) => ({ type: types.Set, payload: {name, content} }),\n    setYears: (years) => ({ type: types.SetYears, payload: years }),\n    changeYear: (year) => ({ type: types.ChangeYear, payload: year }),\n    getDepartments: () => ({ type: types.GetDepartments }),\n    setDepartments: (departments) => ({ type: types.SetDepartments, payload: departments }),\n    setDepartment: (department) => ({ type: types.SetDepartment, payload: department }),\n    getDepartmentSubjects: (department) => ({ type: types.GetDepartmentSubjects, payload: department }),\n    setSubjects: (subjects) => ({ type: types.SetSubjects, payload: subjects }),\n    addOrUpdateSubjects: (subjects) => ({ type: types.AddOrUpdateSubjects, payload: subjects }),\n    addSubjectDone: (subjectInfo) => ({ type: types.AddSubjectDone, payload: subjectInfo }),\n    removeSubject: (subject) => ({ type: types.RemoveSubject, payload: subject }),\n    addOrUpdateShifts: (subject, shifts) => ({ type: types.AddOrUpdateShifts, payload: {subject, shifts} }),\n    addClass: (subject, type, number) => ({ type: types.SaveClass, payload: {subject, type, number} }),\n    removeClass: (subject, type, number) => ({ type: types.RemoveClass, payload: {subject, type, number} }),\n    setView: (view) => ({ type: types.SetView, payload: view }),\n    nothing: () => ({ type: types.Nothing })\n};\n\nexport function* saga() {\n    yield takeLatest(types.Init, function* () {\n        const years = {\n            all: [],\n            chosen: new Date().getMonth() >= 9 ? new Date().getFullYear() + 1 : new Date().getFullYear()\n        }\n        for (let year = years.chosen; year >= 2015; year--)\n            years.all.push(year);\n        yield put(actions.setYears(years));\n        yield put(actions.getDepartments());\n\n        const classes = yield select(state => state.redux.classes);\n        if (Array.isArray(classes))\n            yield put(actions.set(\"classes\", {}));\n        const view = yield select(state => state.redux.view);\n        if (view != \"chosen\")\n            yield put(actions.set(\"view\", undefined));\n    });\n    yield takeLatest(types.GetDepartments, function* () {\n        const {data} = yield api.getDepartments();\n        yield put(actions.setDepartments(data));\n    });\n    yield takeLatest(types.SetDepartment, function* ({payload: department}) {\n        const {data} = yield api.getDepartmentSubjects(department);\n        yield put(actions.setSubjects(data.classes));\n    });\n    yield takeLatest(types.ChangeYear, function* ({payload: year}) {\n        const subjects = yield select(state => state.redux.subject.chosen);\n        yield put(actions.addOrUpdateSubjects(Object.keys(subjects)));\n    });\n    yield takeLatest(types.AddOrUpdateSubjects, function* ({payload: subjects}) {\n        let index = 0;\n        do {\n            let subject = Array.isArray(subjects) ? subjects[index++] : subjects;\n            if (subject > 0) {\n                const {data} = yield api.getSubject(subject);\n                let subjectInfo = data;\n                let instances = data.instances;\n                const year = yield select(state => state.redux.year.chosen);\n                let found = false;\n                let instance = undefined;\n                for (let index = 0; !found && index < instances.length; index++) {\n                    if (instances[index].year == year) {\n                        instance = instances[index].id;\n                        found = true;\n                    }\n                }\n                if (instance) {\n                    yield put(actions.addSubjectDone(subjectInfo));\n                    let infoSubject = {...subjectInfo};\n                    infoSubject.credits = infoSubject.credits / 2;\n                    delete infoSubject.instances;\n                    delete infoSubject.url;\n                    const {data} = yield api.getSubjectShifts(instance);\n                    const shiftsInformation = data;\n                    const shifts = {\n                        t: {},\n                        to: {},\n                        tp: {},\n                        tpo: {},\n                        p: {},\n                        po: {}\n                    };\n                    const {data: {building: {abbreviation}}} = yield api.getDepartmentSubjects(infoSubject.department.id);\n                    shiftsInformation.map(shift => {\n                        let infoShift = {...shift};\n                        delete infoShift.teachers;\n                        delete infoShift.url;\n                        for (let index = 0; index < infoShift.instances.length; index++) {\n                            infoShift.instances[index].duration = infoShift.instances[index].duration / 30;\n                            infoShift.instances[index].room = infoShift.instances[index].room ? abbreviation + \" \" + infoShift.instances[index].room : undefined;\n                        }\n                        infoShift.type = {\n                            name: conf.classesTypes(shift.type),\n                            title: shift.type_display\n                        };\n                        delete infoShift.type_display;\n                        shifts[infoShift.type.name][shift.number] = {\n                            subject: infoSubject,\n                            shift: infoShift\n                        };\n                    });\n                    debugger\n                    yield put(actions.addOrUpdateShifts(subject, shifts));\n                } else {\n                    yield put(actions.removeSubject(subject));\n                }\n            }\n        } while (Array.isArray(subjects) && index <= subjects.length);\n        yield put(actions.nothing());\n    });\n}\n","import {all} from \"redux-saga/effects\";\nimport {combineReducers} from \"redux\";\n\nimport * as redux from \"./duck/redux.duck\";\n\nexport const rootReducer = combineReducers({\n    redux: redux.reducer\n});\n\nexport function* rootSaga() {\n    yield all([redux.saga()]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {reduxBatch} from \"@manaflair/redux-batch\";\nimport {persistStore} from \"redux-persist\";\nimport {rootReducer, rootSaga} from \"./rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n    ...getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n        thunk: true\n    }),\n    sagaMiddleware\n];\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers: [reduxBatch]\n});\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport \"./index.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../../redux/duck/redux.duck\";\n\nconst TopMenu = ({name, logo, years, year, departments, department, subjects, subject}) => {\n    const dispatch = useDispatch();\n\n    const view = useSelector(state => state.redux.view);\n\n    const changeYear = (year) => {\n        dispatch(actions.changeYear(year));\n    };\n\n    const chooseDepartment = (department) => {\n        dispatch(actions.setDepartment(department));\n    };\n\n    const chooseSubject = (subject) => {\n        dispatch(actions.addOrUpdateSubjects(subject));\n    };\n\n    const removeSubject = (subject) => {\n        dispatch(actions.removeSubject(subject));\n    };\n\n    const setView = (view) => {\n        dispatch(actions.setView(view));\n    };\n\n    const chosenSubjects = Object.values(subject).sort((a, b) => {return a.abbreviation > b.abbreviation});\n\n    return <>\n        <div id=\"topMenu\">\n            <span>\n                <img src={logo} />\n                <h1>{name}</h1>\n            </span>\n            <span>\n                <select\n                    value={year}\n                    onChange={(event) => changeYear(event.target.value)}\n                >\n                    <option disabled selected>Escolher Ano Letivo</option>\n                    {\n                        years.map(year =>\n                            <option value={year}>{year}</option>\n                        )\n                    }\n                </select>\n                <select\n                    value={department}\n                    onChange={(event) => chooseDepartment(event.target.value)}\n                >\n                    <option disabled selected>Escolher Departamento</option>\n                    {\n                        departments.map(option =>\n                            <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n                <select\n                    onChange={(event) => chooseSubject(event.target.value)}\n                >\n                    <option value={-1} selected>Adicionar Cadeira</option>\n                    {\n                        subjects.map(option =>\n                            subject[option.id]\n                                ? <></>\n                                : <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n            </span>\n        </div>\n        <div id=\"subTopMenu\">\n            <div id=\"subjects\">\n                {\n                    chosenSubjects.map(obj =>\n                        <div title={obj.name}>\n                            {obj.abbreviation}\n                            <span onClick={() => removeSubject(obj.id)}>X</span>\n                        </div>\n                    )\n                }\n            </div>\n            <div id=\"menu\">\n                <div className=\"option\" id=\"update\" onClick={() => changeYear(year)}><span>&#8634; Atualizar</span></div>\n                <div id=\"view\">\n                    <span className={view == undefined ? \"active\" : \"\"} onClick={() => setView(undefined)}>Escolher</span>\n                    <span className={view == \"chosen\" ? \"active\" : \"\"} onClick={() => setView(\"chosen\")}>Escolhido</span>\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default TopMenu;","import React from \"react\";\nimport TopMenu from \"../component/topMenu\";\nimport conf from \"../conf\";\nimport {useSelector} from \"react-redux\";\n\nconst TopMenuContainer = () => {\n    const years = useSelector(state => state.redux.year.all);\n    const year = useSelector(state => state.redux.year.chosen);\n    const departments = useSelector(state => state.redux.department.all);\n    const department = useSelector(state => state.redux.department.chosen);\n    const subjects = useSelector(state => state.redux.subject.all);\n    const subject = useSelector(state => state.redux.subject.chosen);\n\n    return <TopMenu\n        name={conf.name}\n        logo={conf.logo}\n        years={years}\n        year={year}\n        departments={departments}\n        department={department}\n        subjects={subjects}\n        subject={subject}\n    />\n};\n\nexport default TopMenuContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst ElementTD = ({times}) => {\n    let elements = [];\n    for (let time = 0; time < times - 1; time++)\n        elements.push(1);\n\n    return <>{\n        elements.map(obj => <td></td>)\n    }\n        <td className=\"with-right-border\"></td>\n    </>\n};\n\nexport default ElementTD;\n","import React from \"react\";\nimport \"./index.css\";\nimport $ from \"jquery\";\nimport {actions} from \"../../redux/duck/redux.duck\";\nimport {useDispatch} from \"react-redux\";\nimport ElementTD from \"../elementTd\";\n\nconst Timetable = ({maxClasses, hours, classes, filled, chosenClasses}) => {\n    const dispatch = useDispatch();\n\n    const onMouseOver = (id) => {\n        $(\".\" + id).addClass(\"hover\");\n    };\n\n    const onMouseLeave = (id) => {\n        $(\".\" + id).removeClass(\"hover\");\n    };\n\n    const saveOrRemoveClass = (subject, type, number) => {\n        if (chosenClasses[subject] && chosenClasses[subject][type] && chosenClasses[subject][type][number])\n            dispatch(actions.removeClass(subject, type, number));\n        else\n            dispatch(actions.addClass(subject, type, number));\n    };\n\n    return <>\n        <table id=\"timetable\" className=\"timetable\">\n            <thead>\n                <tr>\n                    <th>Hora</th>\n                    <th colSpan={maxClasses[0]}>2ª</th>\n                    <th colSpan={maxClasses[1]}>3ª</th>\n                    <th colSpan={maxClasses[2]}>4ª</th>\n                    <th colSpan={maxClasses[3]}>5ª</th>\n                    <th colSpan={maxClasses[4]}>6ª</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                hours.map(hour => <tr>\n                    <td>{\n                        (hour/60).toString().indexOf(\".5\") == -1\n                            ? parseInt(hour/60) < 10\n                                ? \"0\" + parseInt(hour/60)\n                                : parseInt(hour/60)\n                            : parseInt(hour/60)+1 < 10\n                                ? \"0\" + (parseInt(hour/60)+1)\n                                : (parseInt(hour/60)+1)\n\n                    }:00</td>\n                        {\n                            [0, 1, 2, 3, 4].map(day => <>\n                                {\n                                    filled[hours.indexOf(hour)][day]\n                                        ? classes[hours.indexOf(hour)][day].sort(\n                                            (a, b) => {\n                                                if (a.subject.abbreviation != b.subject.abbreviation)\n                                                    return a.subject.abbreviation > b.subject.abbreviation;\n                                                else\n                                                    return a.shift.number > b.shift.number;\n                                            }\n                                        ).map(shiftInfo =>\n                                            <td\n                                                rowSpan={shiftInfo.shift.duration} className={`class ${shiftInfo.shift.type.name} ${shiftInfo.subject.id}-${shiftInfo.shift.type.name}-${shiftInfo.shift.number}`}\n                                                onMouseOver={() => onMouseOver(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name + \"-\" + shiftInfo.shift.number)}\n                                                onMouseLeave={() => onMouseLeave(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name + \"-\" + shiftInfo.shift.number)}\n                                            >\n                                                {\n                                                        chosenClasses[shiftInfo.subject.id] && chosenClasses[shiftInfo.subject.id][shiftInfo.shift.type.name] && chosenClasses[shiftInfo.subject.id][shiftInfo.shift.type.name.toLowerCase()][shiftInfo.shift.number]\n                                                            ? <div className=\"save\" title=\"Remover\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id, shiftInfo.shift.type.name, shiftInfo.shift.number)}>&#10005;</div>\n                                                            : <div className=\"save\" title=\"Guardar\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id, shiftInfo.shift.type.name, shiftInfo.shift.number)}>&#9733;</div>\n                                                }\n                                                <h3><span title={shiftInfo.subject.name}>{shiftInfo.subject.abbreviation}</span></h3>\n                                                <p><span title={shiftInfo.shift.type.title + \" \" + shiftInfo.shift.number}>{shiftInfo.shift.type.name.toUpperCase()} {shiftInfo.shift.number}</span><br />{shiftInfo.shift.room}</p>\n                                            </td>\n                                        )\n                                        : <ElementTD times={maxClasses[day] - filled[hours.indexOf(hour)][day]} />\n                                }\n                                {\n                                    maxClasses[day] > filled[hours.indexOf(hour)][day] && filled[hours.indexOf(hour)][day]\n                                        ? <ElementTD times={maxClasses[day] - filled[hours.indexOf(hour)][day]} />\n                                        : <></>\n                                }\n                                </>\n                            )\n                        }\n                </tr>\n                )\n            }\n            </tbody>\n        </table>\n    </>\n};\n\nexport default Timetable;","import React from \"react\";\nimport Timetable from \"../component/timetable\";\nimport {useSelector} from \"react-redux\";\n\nconst ContentContainer = () => {\n    const shifts = useSelector(state => state.redux.shifts);\n    const chosenClasses = useSelector(state => state.redux.classes);\n    const view = useSelector(state => state.redux.view);\n\n    const hours = [];\n    for (let current = 8; current <= 23.5; current = current + 0.5)\n        hours.push(current * 60);\n\n    const classes = [];\n    const filled = [];\n    hours.map(() => {\n        let hour1 = [];\n        let hour2 = [];\n        [1, 2, 3, 4, 5].map(() => {\n            hour1.push([]);\n            hour2.push(0);\n        })\n        classes.push(hour1);\n        filled.push(hour2);\n    });\n\n    const maxClasses = [1, 1, 1, 1, 1];\n\n    let showShifts = view == \"chosen\" ? chosenClasses : shifts;\n\n    Object.keys(showShifts).map(subject => {\n        Object.keys(showShifts[subject]).map(type => {\n            Object.keys(showShifts[subject][type]).map(number => {\n                    let shiftInfo = showShifts[subject][type][number];\n                    shiftInfo.shift.instances.map(instance => {\n                        classes[hours.indexOf(instance.start)][instance.weekday].push({\n                            subject: shiftInfo.subject,\n                            shift: {\n                                ...instance,\n                                number: shiftInfo.shift.number,\n                                type: shiftInfo.shift.type\n                            }\n                        });\n                        for (let hour = hours.indexOf(instance.start); hour < hours.indexOf(instance.start) + (instance.duration); hour++) {\n                            filled[hour][instance.weekday]++;\n                            maxClasses[instance.weekday] = Math.max(maxClasses[instance.weekday], filled[hour][instance.weekday]);\n                        }\n                    });\n                }\n            )\n        });\n    });\n\n    return <div id=\"content\">\n        <Timetable\n            maxClasses={maxClasses}\n            hours={hours}\n            classes={classes}\n            filled={filled}\n            chosenClasses={chosenClasses}\n        />\n    </div>\n};\n\nexport default ContentContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst Loader = () => {\n    return <div className=\"loaderContainer\">\n        <div className=\"loader\"></div>\n    </div>\n};\n\nexport default Loader;","import React from \"react\";\nimport \"./index.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Footer = () => {\n    return <div id=\"footer\">\n        <img id=\"logo\" src={\"/logo.png\"} />\n        <div id=\"menu\">\n            {/*<a href=\"https://github.com/4lexcorrei4/simulador_horarios\" target=\"_blank\" className=\"option\">\n                <ion-icon name=\"logo-github\"></ion-icon>Código\n            </a>\n            <a href=\"https://bitsys.tech\" target=\"_blank\" className=\"option\">\n                <img src=\"https://bitsys.tech/logo.png\" />Desenvolvedor\n            </a>*/}\n            <NavLink to=\"/about\" className=\"option\">\n                <ion-icon name=\"information-circle\"></ion-icon>Sobre\n            </NavLink>\n        </div>\n    </div>\n};\n\nexport default Footer;","import React from \"react\";\nimport Footer from \"../component/footer\";\n\nconst FooterContainer = () => {\n    return <Footer />\n};\n\nexport default FooterContainer;","import React, {useEffect} from \"react\";\nimport TopMenuContainer from \"./topMenu\";\nimport ContentContainer from \"./content\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../redux/duck/redux.duck\";\nimport Loader from \"../component/loader\";\nimport FooterContainer from \"./footer\";\nimport ReactGA from \"react-ga\";\n\nconst PageContainer = () => {\n    ReactGA.initialize(\"UA-190799873-1\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    /*ReactGA.initialize(\"G-6NWXFDQXSZ\");\n    ReactGA.pageview(window.location.pathname + window.location.search);*/\n\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.redux.loading);\n\n    useEffect(\n        () => {\n            dispatch(actions.init());\n        },\n        []\n    );\n\n    return <>\n        <TopMenuContainer />\n        <ContentContainer />\n        <FooterContainer />\n        {\n            loading ? <Loader /> : <></>\n        }\n    </>\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport \"./index.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst About = () => {\n    return <div id=\"about\">\n        <div id=\"content\">\n            <div className=\"header\">\n                <h2>Sobre</h2>\n                <NavLink id=\"close\" to=\"/\">&#10005;</NavLink>\n            </div>\n            <div className=\"content\">\n                <h4>Objetivo</h4>\n                Permitir a simulação de horários da <a href=\"https://www.fct.unl.pt/\" target=\"_blank\">NOVA School of Science and Technology | FCT NOVA</a>.\n                <h4>Contribuir</h4>\n                Quaisquer sugestões de melhoria são sempre bem vindas!<br />\n                O código que permite pôr esta plataforma em funcionamento está disponível <a href=\"https://github.com/4lexcorrei4/simulador_horarios\" target=\"_blank\">aqui</a>.<br />\n                Podes contribuir e ajudar sempre que quiseres, sempre segundo a licensa <a href=\"https://github.com/4lexcorrei4/simulador_horarios/blob/master/LICENSE\" target=\"_blank\">GPLv3</a>.\n                <h4>Contacto</h4>\n                Para me contactares basta enviares mensagem por uma das redes sociais disponíveis <a href=\"https://bitsys.tech/\" target=\"_blank\">aqui</a>.\n                <h4>Desenvolvedor</h4>\n                <a href=\"https://bitsys.tech/\" target=\"_blank\">Alexandre Correia</a>\n                <h4>Créditos</h4>\n                Frameworks e serviços usados:\n                <ul>\n                    <li><a href=\"https://reactjs.org/\" target=\"_blank\">React</a>: Front-end</li>\n                    <li><a href=\"https://supernova.nunl.pt/\" target=\"_blank\">Supernova</a>: Acesso aos conteúdos</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n};\n\nexport default About;\n","import React from 'react';\nimport axios from \"axios\";\nimport * as _redux from \"./redux\";\nimport store, {persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './App.css';\nimport PageContainer from \"./container/page\";\nimport \"./component/global.css\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport About from \"./component/about\";\n\nfunction App() {\n    _redux.setupAxios(axios, store);\n\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <Router>\n                    <PageContainer />\n                    <Switch>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                    </Switch>\n                </Router>\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}