{"version":3,"sources":["redux/api/urls.js","redux/api/api.js","conf/index.js","redux/duck/redux.duck.js","redux/rootReducer.js","redux/store.js","component/topMenu/index.js","container/topMenu.js","component/elementTd/index.js","component/timetable/index.js","container/content.js","component/loader/index.js","component/footer/index.js","container/footer.js","container/page.js","component/about/index.js","App.js","reportWebVitals.js","index.js"],"names":["urls","base","departments","departmentSubjects","depId","departmentSubjectsByYear","year","subject","subjectShifts","time","getDepartmentSubjects","department","axios","get","getDepartmentSubjectsByYear","getSubject","getSubjectShifts","conf","name","logo","classesTypes","type","classesTypesCLIP","timeType","timeNumber","saga","types","initialState","view","undefined","all","chosen","shifts","classes","loading","reducer","persistReducer","storage","key","state","action","newState","payload","content","newChosen","id","newShifts","newClasses","count","number","Object","keys","map","actions","years","subjects","subjectInfo","takeLatest","todayYear","Date","getFullYear","todayMonth","getMonth","todayDay","getDay","currentYear","push","times","put","select","redux","Array","isArray","data","sort","a","b","yearTime","split","subjectsInfos","api","subjectsNames","subjectsObj","period","parent","index","length","ids","indexIds","clipId","external_id","subjectArray","values","depsShort","instances","found","instance","infoSubject","credits","url","shiftsInformation","abbreviation","building","shift","infoShift","teachers","duration","room","title","type_display","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","store","configureStore","devTools","process","enhancers","reduxBatch","persistor","persistStore","run","TopMenu","timetableRef","dispatch","useDispatch","useSelector","setView","chosenSubjects","src","value","onChange","event","chooseDepartment","target","disabled","selected","option","chooseSubject","obj","onClick","removeSubject","className","changeYear","toPng","current","then","toDownload","document","createElement","console","log","href","download","click","remove","TopMenuContainer","ElementTD","elements","Timetable","maxClasses","hours","filled","chosenClasses","saveOrRemoveClass","ref","colSpan","hour","toString","indexOf","parseInt","day","shiftInfo","rowSpan","onMouseOver","$","addClass","onMouseLeave","removeClass","toLowerCase","toUpperCase","ContentContainer","hour1","hour2","showShifts","start","weekday","Math","max","Loader","Footer","to","FooterContainer","PageContainer","ReactGA","initialize","pageview","window","location","pathname","search","useRef","useEffect","About","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec389f3e.chunk.js","sourcesContent":["const urls = {\n    base: () => \"https://api.horarios.bitsys.tech/get?url=\",\n    departments: () => urls.base() + \"/departments\",\n    departmentSubjects: (depId) => urls.base() + \"/department/\" + depId,\n    departmentSubjectsByYear: (depId, year) => urls.base() + \"/department/\" + depId + \"/class_instances?year=\" + year,\n    subject: (subject) => urls.base() + \"/class/\" + subject,\n    subjectShifts: (subject, year, time) => \"https://api.horarios.bitsys.tech/class/\" + subject + \"/\" + year + \"/\" + time\n};\n\nexport default urls;","import axios from \"axios\";\nimport urls from \"./urls\";\n\nexport function getDepartments() {\n    return axios.get(urls.departments());\n}\n\nexport function getDepartmentSubjects(department) {\n    return axios.get(urls.departmentSubjects(department));\n}\n\nexport function getDepartmentSubjectsByYear(department, year) {\n    return axios.get(urls.departmentSubjectsByYear(department, year));\n}\n\nexport function getSubject(subject) {\n    return axios.get(urls.subject(subject));\n}\n\nexport function getSubjectShifts(subject, year, time) {\n    return axios.get(urls.subjectShifts(subject, year, time));\n}","const conf = {\n    name: \"Simulador de Horários\",\n    logo: \"./logo.png\",\n    classesTypes: (type) => {\n        switch (type) {\n            case 1: return \"t\"; break;\n            case 2: return \"p\"; break;\n            case 3: return \"tp\"; break;\n            case 4: return \"s\"; break;\n            case 5: return \"ot\"; break;\n            case 6: return \"tc\"; break;\n            case 7: return \"to\"; break;\n            case 8: return \"po\"; break;\n            case 9: return \"tpo\"; break;\n        }\n    },\n    classesTypesCLIP: (type) => {\n        switch (type) {\n            case 1: return \"t\"; break;\n            case 2: return \"p\"; break;\n            case 3: return \"tp\"; break;\n            case 4: return \"s\"; break;\n            case 5: return \"ot\"; break;\n            case 6: return \"tc\"; break;\n            case 7: return \"to\"; break;\n            case 8: return \"po\"; break;\n            case 9: return \"op\"; break;\n        }\n    },\n    timeType: (time) => {\n        switch (time) {\n            case \"1\": return \"a\"; break;\n            case \"2\": return \"s\"; break;\n            case \"3\": return \"s\"; break;\n            case \"4\": return \"t\"; break;\n            case \"5\": return \"t\"; break;\n            case \"6\": return \"t\"; break;\n            case \"7\": return \"t\"; break;\n        }\n    },\n    timeNumber: (time) => {\n        switch (time) {\n            case \"1\": return 1; break;\n            case \"2\": return 1; break;\n            case \"3\": return 2; break;\n            case \"4\": return 1; break;\n            case \"5\": return 2; break;\n            case \"6\": return 3; break;\n            case \"7\": return 4; break;\n        }\n    }\n};\n\nexport default conf;","import {put, takeLatest, select, all} from \"redux-saga/effects\";\nimport {persistReducer} from \"redux-persist\";\nimport {useHistory} from \"react-router-dom\";\nimport storage from \"redux-persist/lib/storage\";\nimport * as api from \"../api/api\";\nimport conf from \"../../conf\";\n//import Swal from \"sweetalert2\";\n//import withReactContent from \"sweetalert2-react-content\";\n\n//const swal = withReactContent(Swal);\n\nexport const types = {\n    Init: \"[Redux] Init\",\n    Set: \"[Redux] Set\",\n    SetYears: \"[Redux] SetYears\",\n    ChangeYear: \"[Redux] ChangeYear\",\n    GetDepartments: \"[Redux] GetDepartments\",\n    SetDepartments: \"[Redux] SetDepartments\",\n    SetDepartment: \"[Redux] SetDepartment\",\n    GetDepartmentSubjects: \"[Redux] GetDepartmentSubjects\",\n    SetSubjects: \"[Redux] SetSubjects\",\n    AddOrUpdateSubjects: \"[Redux] AddOrUpdateSubjects\",\n    AddSubjectDone: \"[Redux] AddSubjectDone\",\n    RemoveSubject: \"[Redux] RemoveSubject\",\n    AddOrUpdateShifts: \"[Redux] AddOrUpdateShifts\",\n    SaveClass: \"[Redux] SaveClass\",\n    UpdateClasses: \"[Redux] UpdateClasses\",\n    RemoveClass: \"[Redux] RemoveClass\",\n    SetView: \"[Redux] SetView\",\n    Nothing: \"[Redux] Nothing\",\n};\n\nconst initialState = {\n    view: undefined,\n    year: {\n        all: [],\n        chosen: undefined\n    },\n    department: {\n        all: [],\n        chosen: undefined\n    },\n    subject: {\n        all: [],\n        chosen: {}\n    },\n    shifts: {},\n    classes: {},\n    loading: true\n};\n\nexport const reducer = persistReducer(\n    {storage, key: \"simuladorHorarios-redux\"},\n    (state = initialState, action) => {\n        switch (action.type) {\n            case types.Set: {\n                const newState = {...state};\n                newState[action.payload.name] = action.payload.content;\n                return newState;\n            }\n            case types.SetYears: {\n                const newState = {...state};\n                newState.year = action.payload;\n                return newState;\n            }\n            case types.ChangeYear: {\n                const newState = {...state};\n                newState.year.chosen = action.payload;\n                return newState;\n            }\n            case types.GetDepartments: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetDepartments: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.SetDepartment: {\n                const newState = {...state};\n                newState.department = {\n                    ...state.department,\n                    chosen: action.payload\n                };\n                return newState;\n            }\n            case types.GetDepartmentSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.SetSubjects: {\n                const newState = {...state};\n                newState.subject = {\n                    ...state.subject,\n                    all: action.payload\n                };\n                newState.loading = false;\n                return newState;\n            }\n            case types.AddOrUpdateSubjects: {\n                const newState = {...state};\n                newState.loading = true;\n                return newState;\n            }\n            case types.AddSubjectDone: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                newChosen[action.payload.id] = action.payload;\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                return newState;\n            }\n            case types.RemoveSubject: {\n                const newState = {...state};\n                let newChosen = {...state.subject.chosen};\n                delete newChosen[action.payload];\n                newState.subject = {\n                    ...state.subject,\n                    chosen: {...newChosen}\n                };\n                let newShifts = {...state.shifts};\n                delete newShifts[action.payload];\n                newState.shifts = {...newShifts};\n                return newState;\n            }\n            case types.AddOrUpdateShifts: {\n                const newState = {...state};\n                newState.shifts = {...state.shifts};\n                newState.shifts[action.payload.subject] = action.payload.shifts;\n                return newState;\n            }\n            case types.SaveClass: {\n                const newState = {...state};\n                const newClasses = {...state.classes};\n                if (!newClasses[action.payload.subject]) {\n                    newClasses[action.payload.subject] = {};\n                    newClasses[action.payload.subject].count = 1;\n                } else {\n                    newClasses[action.payload.subject].count++;\n                }\n                if (!newClasses[action.payload.subject][action.payload.type])\n                    newClasses[action.payload.subject][action.payload.type] = {};\n                newClasses[action.payload.subject][action.payload.type][action.payload.number] = {...state.shifts[action.payload.subject][action.payload.type][action.payload.number]};\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.UpdateClasses: {\n                const newState = {...state};\n                const newClasses = {...state.classes};\n                Object.keys(newClasses).map(subject => {\n                    Object.keys(newClasses[subject]).map(type => {\n                        Object.keys(newClasses[subject][type]).map(number => {\n                            newClasses[subject][type][number] = newState.shifts[subject][type][number];\n                        });\n                    });\n                });\n                newState.classes = {...newClasses};\n                return newState;\n            }\n            case types.RemoveClass: {\n                const newState = {...state};\n                const newClasses = {...state.classes};\n                newClasses[action.payload.subject].count--;\n                delete newClasses[action.payload.subject][action.payload.type][action.payload.number];\n                if (newClasses[action.payload.subject].count == 0)\n                    delete newClasses[action.payload.subject];\n                newState.classes = newClasses;\n                return newState;\n            }\n            case types.SetView: {\n                const newState = {...state};\n                newState.view = action.payload;\n                return newState;\n            }\n            default:\n                const newState = {...state};\n                newState.loading = false;\n                return newState;\n        }\n    }\n);\n\nexport const actions = {\n    init: () => ({ type: types.Init }),\n    set: (name, content) => ({ type: types.Set, payload: {name, content} }),\n    setYears: (years) => ({ type: types.SetYears, payload: years }),\n    changeYear: (year) => ({ type: types.ChangeYear, payload: year }),\n    getDepartments: () => ({ type: types.GetDepartments }),\n    setDepartments: (departments) => ({ type: types.SetDepartments, payload: departments }),\n    setDepartment: (department) => ({ type: types.SetDepartment, payload: department }),\n    getDepartmentSubjects: (department) => ({ type: types.GetDepartmentSubjects, payload: department }),\n    setSubjects: (subjects) => ({ type: types.SetSubjects, payload: subjects }),\n    addOrUpdateSubjects: (subjects) => ({ type: types.AddOrUpdateSubjects, payload: subjects }),\n    addSubjectDone: (subjectInfo) => ({ type: types.AddSubjectDone, payload: subjectInfo }),\n    removeSubject: (subject) => ({ type: types.RemoveSubject, payload: subject }),\n    addOrUpdateShifts: (subject, shifts) => ({ type: types.AddOrUpdateShifts, payload: {subject, shifts} }),\n    addClass: (subject, type, number) => ({ type: types.SaveClass, payload: {subject, type, number} }),\n    updateClasses: () => ({ type: types.UpdateClasses }),\n    removeClass: (subject, type, number) => ({ type: types.RemoveClass, payload: {subject, type, number} }),\n    setView: (view) => ({ type: types.SetView, payload: view }),\n    nothing: () => ({ type: types.Nothing })\n};\n\nexport function* saga() {\n    yield takeLatest(types.Init, function* () {\n        const todayYear = new Date().getFullYear();\n        const todayMonth = new Date().getMonth() + 1;\n        const todayDay = new Date().getDay();\n        const currentYear = todayMonth >= 8 ? todayYear + 1 : todayYear;\n        const currentTime =\n            todayMonth >= 8\n                ? 2 // 1º semestre\n                : todayMonth + \"\" + todayDay <= \"215\"\n                    ? 5 // trimestre\n                    : 3 // 2º semestre\n        const years = {\n            all: [],\n            chosen: currentYear + \"-\" + currentTime\n        }\n        for (let year = currentYear; year >= 2015; year--)\n            years.all.push({\n                year: year,\n                times: [\n                    {\n                        id: 2,\n                        name: \"1º Semestre\"\n                    },\n                    {\n                        id: 5,\n                        name: \"Trimestre\"\n                    },\n                    {\n                        id: 3,\n                        name: \"2º Semestre\"\n                    }\n                ]\n            });\n        yield put(actions.setYears(years));\n        yield put(actions.getDepartments());\n\n        const classes = yield select(state => state.redux.classes);\n        if (Array.isArray(classes))\n            yield put(actions.set(\"classes\", {}));\n        const view = yield select(state => state.redux.view);\n        if (view != \"chosen\")\n            yield put(actions.set(\"view\", undefined));\n    });\n    yield takeLatest(types.GetDepartments, function* () {\n        const {data} = yield api.getDepartments();\n        data.sort((a, b) => a.name == b.name ? 0 : a.name > b.name ? 1 : -1);\n        yield put(actions.setDepartments(data));\n    });\n    yield takeLatest(types.SetDepartment, function* ({payload: department}) {\n        const yearTime = yield select(state => state.redux.year.chosen);\n        const year = yearTime.split(\"-\")[0];\n        const time = yearTime.split(\"-\")[1];\n        const subjectsInfos = {};\n        {\n            const {data} = yield api.getDepartmentSubjects(department);\n            data.classes.map(subject => {\n                subjectsInfos[subject.id] = subject.name;\n            });\n        }\n        const {data} = yield api.getDepartmentSubjectsByYear(department, year);\n        const subjectsNames = {};\n        const subjectsObj = {};\n        data.map(subject => {\n            if (subject.period == time || subject.period == 1) {\n                subjectsObj[subject.parent] = {\n                    id: subject.parent,\n                    name: subjectsInfos[subject.parent]\n                };\n                if (!subjectsNames[subjectsInfos[subject.parent]])\n                    subjectsNames[subjectsInfos[subject.parent]] = [subject.parent];\n                else\n                    subjectsNames[subjectsInfos[subject.parent]].push(subject.parent);\n            }\n        });\n        for (let index = 0; index < Object.keys(subjectsNames).length; index++) {\n            let name = Object.keys(subjectsNames)[index];\n            if (subjectsNames[name].length > 1) {\n                let ids = subjectsNames[name];\n                for (let indexIds = 0; indexIds < ids.length; indexIds++) {\n                    let id = ids[indexIds];\n                    const {data} = yield api.getSubject(id);\n                    subjectsObj[id].clipId = data.external_id;\n                }\n            }\n        }\n        const subjectArray = Object.values(subjectsObj);\n        subjectArray.sort((a, b) => a.name == b.name ? 0 : a.name > b.name ? 1 : -1);\n        yield put(actions.setSubjects(subjectArray));\n    });\n    yield takeLatest(types.ChangeYear, function* ({payload: year}) {\n        const subjects = yield select(state => state.redux.subject.chosen);\n        yield put(actions.addOrUpdateSubjects(Object.keys(subjects)));\n        yield put(actions.updateClasses());\n    });\n    yield takeLatest(types.AddOrUpdateSubjects, function* ({payload: subjects}) {\n        let index = 0;\n        let depsShort = {};\n        do {\n            let subject = Array.isArray(subjects) ? subjects[index++] : subjects;\n            if (subject > 0) {\n                const {data} = yield api.getSubject(subject);\n                let subjectInfo = data;\n                let instances = data.instances;\n                const yearTime = yield select(state => state.redux.year.chosen);\n                const year = yearTime.split(\"-\")[0];\n                const time = yearTime.split(\"-\")[1];\n                let found = false;\n                let instance = undefined;\n                for (let index = 0; !found && index < instances.length; index++) {\n                    if (instances[index].year == year) {\n                        instance = instances[index].id;\n                        found = true;\n                    }\n                }\n                if (instance) {\n                    yield put(actions.addSubjectDone(subjectInfo));\n                    let infoSubject = {...subjectInfo};\n                    infoSubject.credits = infoSubject.credits / 2;\n                    delete infoSubject.instances;\n                    delete infoSubject.url;\n                    const {data} = yield api.getSubjectShifts(subjectInfo.external_id, year, time);\n                    const shiftsInformation = data;\n                    const shifts = {};\n                    const depId = infoSubject.department.id;\n                    if (!depsShort[depId]) {\n                        const {data: {building: {abbreviation}}} = yield api.getDepartmentSubjects(depId);\n                        depsShort[depId] = abbreviation;\n                    }\n                    shiftsInformation.map(shift => {\n                        let infoShift = {...shift};\n                        delete infoShift.teachers;\n                        delete infoShift.url;\n                        for (let index = 0; index < infoShift.instances.length; index++) {\n                            infoShift.instances[index].duration = infoShift.instances[index].duration / 30;\n                            infoShift.instances[index].room = infoShift.instances[index].room ? depsShort[depId] + \" \" + infoShift.instances[index].room : undefined;\n\n                            infoShift.instances[index].url = \"https://clip.fct.unl.pt/utente/eu/aluno/informa%E7%E3o_acad%E9mica/sector/ano_lectivo/unidade_curricular/actividade/turnos\" +\n                                \"?tipo_de_per%EDodo_lectivo=\" + conf.timeType(time) + \"&sector=98021&ano_lectivo=\" + year +\n                                \"&per%EDodo_lectivo=\" + conf.timeNumber(time) + \"&institui%E7%E3o=97747&unidade_curricular=\" + subjectInfo.external_id +\n                                \"&tipo=\" + conf.classesTypesCLIP(shift.type) + \"&n%BA=\" + infoShift.number;\n                        }\n                        infoShift.type = {\n                            name: conf.classesTypes(shift.type),\n                            title: shift.type_display\n                        };\n                        delete infoShift.type_display;\n                        if (!shifts[infoShift.type.name])\n                            shifts[infoShift.type.name] = {};\n                        infoSubject.url = \"https://clip.fct.unl.pt/utente/eu/aluno/informa%E7%E3o_acad%E9mica/sector/ano_lectivo/unidade_curricular\" +\n                            \"?tipo_de_per%EDodo_lectivo=\" + conf.timeType(time) + \"&sector=98021&ano_lectivo=\" + year +\n                            \"&per%EDodo_lectivo=\" + conf.timeNumber(time) + \"&institui%E7%E3o=97747&unidade_curricular=\" + subjectInfo.external_id;\n                        shifts[infoShift.type.name][shift.number] = {\n                            subject: infoSubject,\n                            shift: infoShift\n                        };\n                    });\n                    yield put(actions.addOrUpdateShifts(subject, shifts));\n                } else {\n                    yield put(actions.removeSubject(subject));\n                }\n            }\n        } while (Array.isArray(subjects) && index <= subjects.length);\n        yield put(actions.nothing());\n    });\n}\n","import {all} from \"redux-saga/effects\";\nimport {combineReducers} from \"redux\";\n\nimport * as redux from \"./duck/redux.duck\";\n\nexport const rootReducer = combineReducers({\n    redux: redux.reducer\n});\n\nexport function* rootSaga() {\n    yield all([redux.saga()]);\n}\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport {reduxBatch} from \"@manaflair/redux-batch\";\nimport {persistStore} from \"redux-persist\";\nimport {rootReducer, rootSaga} from \"./rootReducer\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [\n    ...getDefaultMiddleware({\n        immutableCheck: false,\n        serializableCheck: false,\n        thunk: true\n    }),\n    sagaMiddleware\n];\n\nconst store = configureStore({\n    reducer: rootReducer,\n    middleware,\n    devTools: process.env.NODE_ENV !== \"production\",\n    enhancers: [reduxBatch]\n});\n\n/**\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\n * @see https://github.com/rt2zz/redux-persist#persistor-object\n */\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport \"./index.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../../redux/duck/redux.duck\";\nimport {NavLink} from \"react-router-dom\";\nimport {toPng} from \"html-to-image\";\nimport $ from \"jquery\";\n\nconst TopMenu = ({name, logo, years, year, departments, department, subjects, subject, timetableRef}) => {\n    const dispatch = useDispatch();\n\n    const view = useSelector(state => state.redux.view);\n\n    const changeYear = (year) => {\n        dispatch(actions.changeYear(year));\n    };\n\n    const chooseDepartment = (department) => {\n        dispatch(actions.setDepartment(department));\n    };\n\n    const chooseSubject = (subject) => {\n        dispatch(actions.addOrUpdateSubjects(subject));\n    };\n\n    const removeSubject = (subject) => {\n        dispatch(actions.removeSubject(subject));\n    };\n\n    const setView = (view) => {\n        dispatch(actions.setView(view));\n    };\n\n    const takeScreenshot = () => {\n        if (timetableRef)\n            toPng(timetableRef.current).then(url => {\n                const toDownload = document.createElement(\"a\");\n                console.log(toDownload)\n                toDownload.href = url;\n                toDownload.download = \"horario.png\";\n                toDownload.click();\n                toDownload.remove();\n            });\n    };\n\n    const chosenSubjects = Object.values(subject).sort((a, b) => {return a.abbreviation > b.abbreviation});\n\n    return <>\n        <div id=\"topMenu\">\n            <span>\n                <img src={logo} />\n                <h1>{name}</h1>\n            </span>\n            <span>\n                {/*<select\n                    value={year}\n                    onChange={(event) => changeYear(event.target.value)}\n                >\n                    <option disabled selected>Escolher Período Letivo</option>\n                    {\n                        years.map(year =>\n                            <optgroup label={year.year}>\n                                {\n                                    year.times.map(time =>\n                                        <option value={year.year + \"-\" + time.id}>{time.name}</option>\n                                    )\n                                }\n                            </optgroup>\n                        )\n                    }\n                </select>*/}\n                <select\n                    value={department}\n                    onChange={(event) => chooseDepartment(event.target.value)}\n                >\n                    <option disabled selected>Escolher Departamento</option>\n                    {\n                        departments.map(option =>\n                            <option value={option.id}>{option.name}</option>\n                        )\n                    }\n                </select>\n                <select\n                    onChange={(event) => chooseSubject(event.target.value)}\n                >\n                    <option value={-1} selected>Adicionar Cadeira</option>\n                    {\n                        subjects.map(option =>\n                            subject[option.id]\n                                ? <></>\n                                : <option value={option.id}>{option.name}{option.clipId ? \" - \" + option.clipId: \"\"}</option>\n                        )\n                    }\n                </select>\n            </span>\n        </div>\n        <div id=\"subTopMenu\">\n            <div id=\"subjects\">\n                {\n                    chosenSubjects.map(obj =>\n                        <div title={obj.name}>\n                            {obj.abbreviation}\n                            <span onClick={() => removeSubject(obj.id)}>X</span>\n                        </div>\n                    )\n                }\n            </div>\n            <div id=\"menu\">\n                <div className=\"option option-only\" onClick={() => changeYear(year)}><span>&#8634; Atualizar</span></div>\n                <div className=\"option option-only\" onClick={() => takeScreenshot()}><span>&#128247; Imagem</span></div>\n                <div id=\"view\" className=\"option\">\n                    <span className={view == undefined ? \"active\" : \"\"} onClick={() => setView(undefined)}>Escolher</span>\n                    <span className={view == \"chosen\" ? \"active\" : \"\"} onClick={() => setView(\"chosen\")}>Escolhido</span>\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default TopMenu;","import React from \"react\";\nimport TopMenu from \"../component/topMenu\";\nimport conf from \"../conf\";\nimport {useSelector} from \"react-redux\";\n\nconst TopMenuContainer = ({timetableRef}) => {\n    const years = useSelector(state => state.redux.year.all);\n    const year = useSelector(state => state.redux.year.chosen);\n    const departments = useSelector(state => state.redux.department.all);\n    const department = useSelector(state => state.redux.department.chosen);\n    const subjects = useSelector(state => state.redux.subject.all);\n    const subject = useSelector(state => state.redux.subject.chosen);\n\n    return <TopMenu\n        name={conf.name}\n        logo={conf.logo}\n        years={years}\n        year={year}\n        departments={departments}\n        department={department}\n        subjects={subjects}\n        subject={subject}\n        timetableRef={timetableRef}\n    />\n};\n\nexport default TopMenuContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst ElementTD = ({times}) => {\n    let elements = [];\n    for (let time = 0; time < times - 1; time++)\n        elements.push(1);\n\n    return <>{\n        elements.map(obj => <td></td>)\n    }\n        <td className=\"with-right-border\"></td>\n    </>\n};\n\nexport default ElementTD;\n","import React from \"react\";\nimport \"./index.css\";\nimport $ from \"jquery\";\nimport {actions} from \"../../redux/duck/redux.duck\";\nimport {useDispatch} from \"react-redux\";\nimport ElementTD from \"../elementTd\";\n\nconst Timetable = ({maxClasses, hours, classes, filled, chosenClasses, timetableRef}) => {\n    const dispatch = useDispatch();\n\n    const onMouseOver = (id, subject) => {\n        $(\".\" + id).addClass(\"hover\");\n        $(\".\" + subject).addClass(\"subject-hover\");\n    };\n\n    const onMouseLeave = (id, subject) => {\n        $(\".\" + id).removeClass(\"hover\");\n        $(\".\" + subject).removeClass(\"subject-hover\");\n    };\n\n    const saveOrRemoveClass = (subject, type, number) => {\n        if (chosenClasses[subject] && chosenClasses[subject][type] && chosenClasses[subject][type][number])\n            dispatch(actions.removeClass(subject, type, number));\n        else\n            dispatch(actions.addClass(subject, type, number));\n    };\n\n    return <>\n        <table ref={timetableRef} className=\"timetable\">\n            <thead>\n                <tr>\n                    <th>Hora</th>\n                    <th colSpan={maxClasses[0]}>2ª (Seg)</th>\n                    <th colSpan={maxClasses[1]}>3ª (Ter)</th>\n                    <th colSpan={maxClasses[2]}>4ª (Qua)</th>\n                    <th colSpan={maxClasses[3]}>5ª (Qui)</th>\n                    <th colSpan={maxClasses[4]}>6ª (Sex)</th>\n                    <th colSpan={maxClasses[5]}>Sábado</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                hours.map(hour => <tr>\n                    <td>{\n                        (hour/60).toString().indexOf(\".5\") == -1\n                            ? parseInt(hour/60) < 10\n                                ? \"0\" + parseInt(hour/60)\n                                : parseInt(hour/60)\n                            : parseInt(hour/60)+1 < 10\n                                ? \"0\" + (parseInt(hour/60)+1)\n                                : (parseInt(hour/60)+1)\n\n                    }:00</td>\n                        {\n                            [0, 1, 2, 3, 4, 5].map(day => <>\n                                {\n                                    filled[hours.indexOf(hour)][day]\n                                        ? classes[hours.indexOf(hour)][day].sort(\n                                            (a, b) => {\n                                                if (a.subject.abbreviation != b.subject.abbreviation)\n                                                    return a.subject.abbreviation > b.subject.abbreviation;\n                                                else\n                                                    return a.shift.number > b.shift.number;\n                                            }\n                                        ).map(shiftInfo =>\n                                            <td\n                                                rowSpan={shiftInfo.shift.duration}\n                                                className={`class ${shiftInfo.shift.type.name} ${shiftInfo.subject.id} ${shiftInfo.subject.id}-${shiftInfo.shift.type.name}-${shiftInfo.shift.number}`}\n                                                onMouseOver={() => onMouseOver(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name + \"-\" + shiftInfo.shift.number, shiftInfo.subject.id)}\n                                                onMouseLeave={() => onMouseLeave(shiftInfo.subject.id + \"-\" + shiftInfo.shift.type.name + \"-\" + shiftInfo.shift.number, shiftInfo.subject.id)}\n                                            >\n                                                {\n                                                        chosenClasses[shiftInfo.subject.id] && chosenClasses[shiftInfo.subject.id][shiftInfo.shift.type.name] && chosenClasses[shiftInfo.subject.id][shiftInfo.shift.type.name.toLowerCase()][shiftInfo.shift.number]\n                                                            ? <div className=\"save\" title=\"Remover\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id, shiftInfo.shift.type.name, shiftInfo.shift.number)}>&#10005;</div>\n                                                            : <div className=\"save\" title=\"Guardar\"\n                                                                   onClick={() => saveOrRemoveClass(shiftInfo.subject.id, shiftInfo.shift.type.name, shiftInfo.shift.number)}>&#9733;</div>\n                                                }\n                                                <h3><a href={shiftInfo.subject.url ? shiftInfo.subject.url : \"javascript:;\"} target={shiftInfo.subject.url ? \"_blank\" : \"\"}><span title={shiftInfo.subject.name}>{shiftInfo.subject.abbreviation}</span></a></h3>\n                                                <p><a href={shiftInfo.shift.url ? shiftInfo.shift.url : \"javascript:;\"} target={shiftInfo.shift.url ? \"_blank\" : \"\"}><span title={shiftInfo.shift.type.title + \" \" + shiftInfo.shift.number}>{shiftInfo.shift.type.name.toUpperCase()} {shiftInfo.shift.number}</span></a><br />{shiftInfo.shift.room}</p>\n                                            </td>\n                                        )\n                                        : <ElementTD times={maxClasses[day] - filled[hours.indexOf(hour)][day]} />\n                                }\n                                {\n                                    maxClasses[day] > filled[hours.indexOf(hour)][day] && filled[hours.indexOf(hour)][day]\n                                        ? <ElementTD times={maxClasses[day] - filled[hours.indexOf(hour)][day]} />\n                                        : <></>\n                                }\n                                </>\n                            )\n                        }\n                </tr>\n                )\n            }\n            </tbody>\n        </table>\n    </>\n};\n\nexport default Timetable;","import React from \"react\";\nimport Timetable from \"../component/timetable\";\nimport {useSelector} from \"react-redux\";\nimport TopMenuContainer from \"./topMenu\";\n\nconst ContentContainer = ({timetableRef}) => {\n    const shifts = useSelector(state => state.redux.shifts);\n    const chosenClasses = useSelector(state => state.redux.classes);\n    const view = useSelector(state => state.redux.view);\n\n    const hours = [];\n    for (let current = 8; current <= 23.5; current = current + 0.5)\n        hours.push(current * 60);\n\n    const classes = [];\n    const filled = [];\n    hours.map(() => {\n        let hour1 = [];\n        let hour2 = [];\n        [1, 2, 3, 4, 5, 6].map(() => {\n            hour1.push([]);\n            hour2.push(0);\n        })\n        classes.push(hour1);\n        filled.push(hour2);\n    });\n\n    const maxClasses = [1, 1, 1, 1, 1, 1];\n\n    let showShifts = view == \"chosen\" ? chosenClasses : shifts;\n\n    Object.keys(showShifts).map(subject => {\n        Object.keys(showShifts[subject]).map(type => {\n            Object.keys(showShifts[subject][type]).map(number => {\n                    let shiftInfo = showShifts[subject][type][number];\n                    shiftInfo.shift.instances.map(instance => {\n                        classes[hours.indexOf(instance.start)][instance.weekday].push({\n                            subject: shiftInfo.subject,\n                            shift: {\n                                ...instance,\n                                number: shiftInfo.shift.number,\n                                type: shiftInfo.shift.type\n                            }\n                        });\n                        for (let hour = hours.indexOf(instance.start); hour < hours.indexOf(instance.start) + (instance.duration); hour++) {\n                            filled[hour][instance.weekday]++;\n                            maxClasses[instance.weekday] = Math.max(maxClasses[instance.weekday], filled[hour][instance.weekday]);\n                        }\n                    });\n                }\n            )\n        });\n    });\n\n    return <div id=\"content\">\n        <Timetable\n            maxClasses={maxClasses}\n            hours={hours}\n            classes={classes}\n            filled={filled}\n            chosenClasses={chosenClasses}\n            timetableRef={timetableRef}\n        />\n    </div>\n};\n\nexport default ContentContainer;","import React from \"react\";\nimport \"./index.css\";\n\nconst Loader = () => {\n    return <div className=\"loaderContainer\">\n        <div className=\"loader\"></div>\n    </div>\n};\n\nexport default Loader;","import React from \"react\";\nimport \"./index.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst Footer = () => {\n    return <div id=\"footer\">\n        <img id=\"logo\" src={\"/logo.png\"} />\n        <div id=\"menu\">\n            {/*<a href=\"https://github.com/4lexcorrei4/simulador_horarios\" target=\"_blank\" className=\"option\">\n                <ion-icon name=\"logo-github\"></ion-icon>Código\n            </a>\n            <a href=\"https://bitsys.tech\" target=\"_blank\" className=\"option\">\n                <img src=\"https://bitsys.tech/logo.png\" />Desenvolvedor\n            </a>*/}\n            <NavLink to=\"/about\" className=\"option\">\n                <ion-icon name=\"information-circle\"></ion-icon>Sobre\n            </NavLink>\n        </div>\n    </div>\n};\n\nexport default Footer;","import React from \"react\";\nimport Footer from \"../component/footer\";\n\nconst FooterContainer = () => {\n    return <Footer />\n};\n\nexport default FooterContainer;","import React, {useEffect, useRef} from \"react\";\nimport TopMenuContainer from \"./topMenu\";\nimport ContentContainer from \"./content\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actions} from \"../redux/duck/redux.duck\";\nimport Loader from \"../component/loader\";\nimport FooterContainer from \"./footer\";\nimport ReactGA from \"react-ga\";\n\nconst PageContainer = () => {\n    ReactGA.initialize(\"UA-190799873-1\");\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    /*ReactGA.initialize(\"G-6NWXFDQXSZ\");\n    ReactGA.pageview(window.location.pathname + window.location.search);*/\n\n    const dispatch = useDispatch();\n    const loading = useSelector(state => state.redux.loading);\n    let timetableRef = useRef(null);\n\n    useEffect(\n        () => {\n            dispatch(actions.init());\n        },\n        []\n    );\n\n    return <>\n        <TopMenuContainer timetableRef={timetableRef} />\n        <ContentContainer timetableRef={timetableRef} />\n        <FooterContainer />\n        {\n            loading ? <Loader /> : <></>\n        }\n    </>\n};\n\nexport default PageContainer;\n","import React from \"react\";\nimport \"./index.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst About = () => {\n    return <>\n        <NavLink id=\"aboutContainer\" to=\"/\" />\n        <div id=\"aboutContentContainer\">\n            <div id=\"aboutContent\">\n                <div className=\"header\">\n                    <h2>Sobre</h2>\n                    <NavLink id=\"close\" to=\"/\">&#10005;</NavLink>\n                </div>\n                <div className=\"content\">\n                    <h4>Objetivo</h4>\n                    Permitir a simulação de horários da <a href=\"https://www.fct.unl.pt/\" target=\"_blank\">NOVA School of Science and Technology | FCT NOVA</a>.\n                    <h4>Contribuir</h4>\n                    Quaisquer sugestões de melhoria são sempre bem vindas!<br />\n                    O código que permite pôr esta plataforma em funcionamento está disponível <a href=\"https://github.com/4lexcorrei4/simulador_horarios\" target=\"_blank\">aqui</a>.<br />\n                    Podes contribuir e ajudar sempre que quiseres, sempre segundo a licensa <a href=\"https://github.com/4lexcorrei4/simulador_horarios/blob/master/LICENSE\" target=\"_blank\">GPLv3</a>.\n                    <h4>Contacto</h4>\n                    Para me contactares basta enviares mensagem por uma das redes sociais disponíveis <a href=\"https://bitsys.tech/\" target=\"_blank\">aqui</a>.\n                    <h4>Desenvolvedor</h4>\n                    <a href=\"https://bitsys.tech/\" target=\"_blank\">Alexandre Correia</a>\n                    <h4>Créditos</h4>\n                    Frameworks e serviços usados:\n                    <ul>\n                        <li><a href=\"https://reactjs.org/\" target=\"_blank\">React</a>: Front-end</li>\n                        <li><a href=\"https://supernova.nunl.pt/\" target=\"_blank\">Supernova</a>: Acesso aos conteúdos</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </>\n};\n\nexport default About;\n","import React from 'react';\nimport axios from \"axios\";\nimport * as _redux from \"./redux\";\nimport store, {persistor} from \"./redux/store\";\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport './App.css';\nimport PageContainer from \"./container/page\";\nimport \"./component/global.css\";\nimport {BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport About from \"./component/about\";\n\nfunction App() {\n    _redux.setupAxios(axios, store);\n\n    return (\n        <Provider store={store}>\n            <PersistGate persistor={persistor} loading={null}>\n                <Router>\n                    <PageContainer />\n                    <Switch>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                    </Switch>\n                </Router>\n            </PersistGate>\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}